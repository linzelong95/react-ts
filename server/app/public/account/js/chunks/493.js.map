{"version":3,"sources":["webpack://blog/./spa/account/containers/register/index.tsx"],"names":["layout","labelCol","span","wrapperCol","tailLayout","offset","Register","memo","history","useHistory","form","Form","useService","accountServices","captchaRes","forceRequest","handleLogin","useCallback","validateFields","then","values","captcha","account","password","message","content","key","duration","md5Password","serialize","registerErr","replace","catch","style","minHeight","background","display","justifyContent","alignItems","width","className","src","height","borderRadius","fontSize","fontWeight","marginLeft","name","label","rules","required","dependencies","getFieldValue","validator","_","value","Promise","reject","Error","resolve","gutter","noStyle","placeholder","alt","data","item","border","padding","cursor","onClick","block","type","Link","to"],"mappings":"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","file":"account/js/chunks/493.js","sourcesContent":["import React, { memo, useCallback } from 'react'\nimport { accountServices } from '@common/services'\nimport { Card, Form, Input, Button, message, Row, Col } from 'antd'\nimport { useHistory, Link } from 'react-router-dom'\nimport { useService } from '@common/hooks'\nimport { serialize } from '@common/utils'\nimport type { FC } from 'react'\nimport type { RouteComponentProps } from 'react-router'\nimport type { ButtonProps } from 'antd/lib/button'\nimport type { IAccount } from '@common/types'\n\nconst layout = {\n  labelCol: { span: 5 },\n  wrapperCol: { span: 16 },\n}\nconst tailLayout = {\n  wrapperCol: { offset: 5, span: 16 },\n}\n\nconst Register: FC<RouteComponentProps<never>> = memo(() => {\n  const history = useHistory()\n  const [form] = Form.useForm<IAccount['registerParams'] & { captcha: string }>()\n\n  const [, captchaRes, , forceRequest] = useService(accountServices.getWebpageCaptcha)\n\n  const handleLogin = useCallback<ButtonProps['onClick']>(() => {\n    form\n      .validateFields()\n      .then(async (values) => {\n        const { captcha, account, password } = values\n        message.loading({ content: '正在注册...', key: 'register', duration: 0 })\n        const [, verifyCaptchaErr] = await accountServices.verifyCaptcha(captcha)\n        if (verifyCaptchaErr) {\n          message.error({ content: '验证码错误', key: 'register' })\n          return\n        }\n        const md5Password = serialize(password)\n        const [, registerErr] = await accountServices.register({ account, password: md5Password })\n        if (registerErr) {\n          message.error({ content: registerErr.message || '注册失败', key: 'register' })\n          return\n        }\n        message.success({ content: '注册成功', key: 'register' })\n        history.replace('/login')\n      })\n      .catch(() => {\n        message.error('请检查表单是否填写无误')\n      })\n  }, [form, history])\n\n  return (\n    <div style={{ minHeight: '100vh', background: '#f0f2f5', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n      <Card style={{ width: 600 }}>\n        <div className=\"mt15 mb20\" style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n          <img src={`${__SERVER_ORIGIN__ || ''}/public/assets/images/logo.png`} style={{ width: 40, height: 40, borderRadius: '50%' }} />\n          <span style={{ fontSize: 36, fontWeight: 'bold', marginLeft: 16 }}>briefNull</span>\n        </div>\n        <Form {...layout} form={form} name=\"register\">\n          <Form.Item label=\"Account\" name=\"account\" rules={[{ required: true, message: 'Please input your account!' }]}>\n            <Input />\n          </Form.Item>\n          <Form.Item label=\"Password\" name=\"password\" rules={[{ required: true, message: 'Please input your password!' }]}>\n            <Input.Password />\n          </Form.Item>\n          <Form.Item\n            label=\"Re Password\"\n            name=\"rePassword\"\n            dependencies={['password']}\n            rules={[\n              { required: true, message: 'Please input your password!' },\n              ({ getFieldValue }) => ({\n                validator(_, value) {\n                  if (!value || getFieldValue('password') === value) {\n                    return Promise.resolve()\n                  }\n                  return Promise.reject(new Error('The two passwords that you entered do not match!'))\n                },\n              }),\n            ]}\n          >\n            <Input.Password />\n          </Form.Item>\n          <Form.Item label=\"Captcha\">\n            <Row gutter={8}>\n              <Col span={18}>\n                <Form.Item noStyle name=\"captcha\" rules={[{ required: true, message: 'Please input captcha!' }]}>\n                  <Input placeholder=\"captcha\" />\n                </Form.Item>\n              </Col>\n              <Col span={6}>\n                <img\n                  alt=\"验证码\"\n                  src={captchaRes?.data?.item && `data:image/png;base64,${captchaRes.data.item}`}\n                  style={{ height: 31, width: '100%', border: '1px solid gray', padding: 3, cursor: 'pointer' }}\n                  onClick={forceRequest}\n                />\n              </Col>\n            </Row>\n          </Form.Item>\n          <Form.Item {...tailLayout}>\n            <Button block type=\"primary\" onClick={handleLogin}>\n              注册\n            </Button>\n          </Form.Item>\n          <Form.Item {...tailLayout} className=\"text-right\">\n            <Link to=\"/login\">使用已有账号登录</Link>\n          </Form.Item>\n        </Form>\n      </Card>\n    </div>\n  )\n})\n\nexport default Register\n"],"sourceRoot":""}