{"version":3,"sources":["webpack://blog/./spa/blog-admin/components/article/edit-form.tsx","webpack://blog/./spa/blog-admin/components/article/detail-drawer.tsx","webpack://blog/./spa/blog-admin/components/article/filter-modal.tsx","webpack://blog/./spa/blog-admin/containers/article/index.tsx","webpack://blog/./spa/blog-admin/services/article/admin.ts","webpack://blog/./spa/blog-admin/services/reply/admin.ts","webpack://blog/./spa/blog-admin/services/sort/admin.ts"],"names":["memo","props","initialValues","visible","allSortList","onSave","onToggleEditorialPanel","restProps","form","Form","useState","sortIdsArr","setSortIdsArr","categoryOptions","setCategoryOptions","getTagListParams","useMemo","index","size","conditionQuery","useService","adminTagServices","length","tagLoading","tagRes","tagErr","tagList","message","data","list","formatFileList","useCallback","fileList","validFileList","filter","file","url","includes","status","Modal","title","okText","handleCancel","resetFields","handleOk","validateFields","then","values","id","category","imageUrl","isTop","tags","params","abstract","content","toHTML","map","tag","key","name","label","catch","error","categoryChange","value","setFieldsValue","slice","useEffect","formattedCategories","sort","categories","disabled","isEnable","editingFormData","uid","BraftEditor","destroyOnClose","width","onOk","onCancel","maskClosable","keyboard","labelCol","span","wrapperCol","rules","required","noStyle","options","fieldNames","children","onChange","placeholder","labelInValue","mode","loading","notFoundContent","filterOption","valuePropName","getValueFromEvent","maxFiles","listType","accept","cropperProps","aspectRatio","PlusOutlined","style","marginTop","rows","marginBottom","detailItem","onClose","formRef","useRef","replyBoxVisible","setReplyBoxVisible","document","documentElement","clientHeight","setClientHeight","prettyFormat","articleIdsArr","orderBy","undefined","replyConditionQuery","setReplyConditionQuery","getReplyListParams","adminReplyServices","replyRes","replyErr","forceRequest","total","replyTotal","replyList","currentUser","useSelector","state","user","replySort","currentTarget","prevValue","by","prepareForReplying","item","from","pid","parentId","to","nickName","setTimeout","current","scrollIntoView","behavior","handleReply","reply","toId","duration","articleId","saveErr","handleReplyItems","type","record","handlingItems","items","getCommentComponent","roleName","createDate","isApproved","actions","moment","Date","format","onClick","fontSize","color","marginLeft","author","avatar","onWindowResize","window","addEventListener","removeEventListener","textAlign","marginRight","TagsOutlined","placement","height","closable","justify","gutter","maxHeight","overflow","paddingRight","textIndent","src","ClockCircleOutlined","EditOutlined","updateDate","ref","DownCircleOutlined","UpCircleOutlined","requiredMark","hidden","float","ReloadOutlined","CaretUpOutlined","CaretDownOutlined","itemLayout","dataSource","renderItem","FilterModal","onSetFilterModalVisible","onSetConditionQuery","filterType","setFilterType","setAllSortList","temporaryCondition","setTemporaryCondition","getListParams","useImperativeHandle","clear","filterRequest","filteredSortArr","tagIdsArr","cateIdsArr","forEach","arr","split","push","Number","pop","oldValue","handleTagSelect","checked","newTagIds","tagId","adminSortServices","sortRes","footer","danger","buttonStyle","target","dot","showIcon","margin","checkable","showLine","onCheck","expandedKeys","checkedKeys","selectable","className","forwardRef","inputSearchRef","filterModalRef","pageSize","pagination","setPagination","editFormVisible","setEditFormVisible","editFormData","setEditFormData","selectedItems","setSelectedItems","allSelectedFlag","setAllSelectedFlag","setConditionQuery","filterModalVisible","setFilterModalVisible","showSorterFlag","setShowSorterFlag","oneDetail","setOneDetail","neededConditionQuery","adminArticleServices","articleRes","articleErr","showDataByDefaultWay","setValue","handleSearch","trim","toggleEditorialPanel","contentRes","saveData","callback","toggleSelectAll","uniqueSelectedItems","dataItem","some","selectedItem","newSelectedItems","toggleSelectOne","every","listItem","toggleShowSorter","handleSort","pageChange","handleItems","toggleReadArticle","actionBarComponent","align","xs","sm","md","lg","xl","icon","FilterOutlined","Boolean","StarOutlined","AlignCenterOutlined","HomeOutlined","shape","onSearch","enterButton","allowClear","count","DeleteOutlined","EyeOutlined","EyeInvisibleOutlined","VerticalAlignTopOutlined","VerticalAlignMiddleOutlined","cursor","contentListComponent","grid","xxl","showQuickJumper","showSizeChanger","onShowSizeChange","pageSizeOptions","defaultPageSize","background","borderRadius","cover","alt","position","description","lines","top","right","transform","left","filterModalComponent","editFormComponent","detailDrawerComponent","getList","post","articleApis","getContent","save","remove","lock","unlock","unTop","replyApis","approve","disapprove","sortApis"],"mappings":"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","file":"blog-admin/js/chunks/754.js","sourcesContent":["import React, { memo, useCallback, useEffect, useMemo, useState } from 'react'\nimport { Modal, Form, Input, Select, Cascader, Row, Col, message } from 'antd'\nimport { PlusOutlined } from '@ant-design/icons'\nimport { useService } from '@common/hooks'\nimport { Upload, RichEditor } from '@common/components'\nimport { adminTagServices } from '@blog-admin/services/tag'\nimport BraftEditor from 'braft-editor'\nimport type { ArticleTypeCollection, TagTypeCollection, Sort } from '@blog-admin/types'\nimport type { FC } from 'react'\nimport type { ModalProps } from 'antd/lib/modal'\nimport type { CascaderProps } from 'antd/lib/cascader'\nimport type { UploadProps } from 'antd/lib/upload'\nimport type { ToggleEditorialPanel, SaveData, DetailItem } from '@blog-admin/containers/article'\nimport 'cropperjs/dist/cropper.css'\n\ninterface EditFormProps extends ModalProps {\n  initialValues?: DetailItem\n  allSortList: Sort['listItemByAdminRole'][]\n  onSave: SaveData\n  onToggleEditorialPanel: ToggleEditorialPanel\n}\n\ntype FormDataWhenEdited = ArticleTypeCollection['formDataWhenEdited']\n\nconst EditForm: FC<EditFormProps> = memo((props) => {\n  const { initialValues, visible, allSortList, onSave, onToggleEditorialPanel, ...restProps } = props\n  const [form] = Form.useForm<FormDataWhenEdited>()\n  const [sortIdsArr, setSortIdsArr] = useState<number[]>([])\n  const [categoryOptions, setCategoryOptions] = useState<any[]>([])\n\n  const getTagListParams = useMemo<TagTypeCollection['getListParamsByAdminRole']>(\n    () => ({\n      index: 1,\n      size: 999,\n      conditionQuery: { sortIdsArr },\n    }),\n    [sortIdsArr],\n  )\n  const [tagLoading, tagRes, tagErr] = useService(adminTagServices.getList, getTagListParams, !sortIdsArr?.length)\n  const tagList = useMemo(() => {\n    if (!sortIdsArr?.length || tagLoading) return []\n    if (tagErr) {\n      message.error(tagErr.message || '获取列表失败')\n      return []\n    }\n    return tagRes?.data?.list || []\n  }, [sortIdsArr, tagLoading, tagRes, tagErr])\n\n  const formatFileList = useCallback<UploadProps['onChange']>(({ fileList }) => {\n    const validFileList = fileList.filter((file) => file.url && ['uploading', 'done'].includes(file.status))\n    if (validFileList.length < fileList.length) Modal.error({ title: '上传失败', okText: '知道了' })\n    return validFileList\n  }, [])\n\n  const handleCancel = useCallback<ModalProps['onCancel']>(() => {\n    form.resetFields()\n    onToggleEditorialPanel()\n  }, [form, onToggleEditorialPanel])\n\n  const handleOk = useCallback<ModalProps['onOk']>(() => {\n    form\n      .validateFields()\n      .then((values) => {\n        const { id } = initialValues || {}\n        const { title, category, imageUrl, isTop, tags, abstract, content } = values\n        const params: ArticleTypeCollection['editParams'] = {\n          id,\n          title,\n          abstract,\n          content: content.toHTML(),\n          isTop,\n          tags: tags.map((tag) => ({ id: tag.key, name: tag.label })),\n          imageUrl: imageUrl?.[0]?.url,\n          category: { id: category[category.length - 1] },\n        }\n        onSave(params, () => {\n          form.resetFields()\n          onToggleEditorialPanel()\n        })\n      })\n      .catch((error) => {\n        message.error(error.message || '请检查表单填写是否正确')\n      })\n  }, [form, initialValues, onSave, onToggleEditorialPanel])\n\n  const categoryChange = useCallback<CascaderProps['onChange']>(\n    (value) => {\n      form.setFieldsValue({ tags: [] })\n      setSortIdsArr(value.slice(0, 1) as number[])\n    },\n    [form],\n  )\n\n  useEffect(() => {\n    const formattedCategories = allSortList\n      .filter((sort) => sort?.categories?.length > 0)\n      .map((sort) => ({\n        ...sort,\n        disabled: !sort?.isEnable,\n        categories: sort?.categories?.map?.((category) => ({ ...category, disabled: !category.isEnable })) || [],\n      }))\n    setCategoryOptions(formattedCategories)\n  }, [allSortList])\n\n  const editingFormData = useMemo<FormDataWhenEdited>(() => {\n    const { isTop = 0, category, imageUrl, tags, content, abstract, title } = initialValues || {}\n    if (category?.sort?.id) setSortIdsArr([category.sort.id])\n    const fileList = imageUrl ? [{ uid: '-1', url: imageUrl, status: 'done' }] : []\n    return {\n      title,\n      abstract,\n      isTop,\n      imageUrl: fileList,\n      content: BraftEditor.createEditorState(content),\n      category: category?.sort?.id ? [category.sort.id, category.id] : [],\n      tags: tags?.map?.((tag) => ({ key: tag.id, label: tag.name })) || [],\n    } as FormDataWhenEdited\n  }, [initialValues])\n\n  return (\n    <Modal\n      destroyOnClose\n      width={1000}\n      title={initialValues?.id ? '更新' : '添加'}\n      visible={visible}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      maskClosable={false}\n      keyboard={false}\n      {...restProps}\n    >\n      <Form labelCol={{ span: 3 }} wrapperCol={{ span: 19 }} form={form} initialValues={editingFormData}>\n        <Form.Item label=\"标题\" name=\"title\" rules={[{ required: true, message: '请输入标题!' }]}>\n          <Input />\n        </Form.Item>\n        <Form.Item noStyle>\n          <Row>\n            <Col span={12}>\n              <Form.Item\n                label=\"分类\"\n                name=\"category\"\n                labelCol={{ span: 6 }}\n                wrapperCol={{ span: 16 }}\n                rules={[{ required: true, message: '请选择分类!' }]}\n              >\n                <Cascader\n                  options={categoryOptions}\n                  fieldNames={{ label: 'name', value: 'id', children: 'categories' }}\n                  onChange={categoryChange}\n                  placeholder=\"Please select\"\n                />\n              </Form.Item>\n            </Col>\n            <Col span={12}>\n              <Form.Item\n                label=\"标签\"\n                name=\"tags\"\n                labelCol={{ span: 4 }}\n                wrapperCol={{ span: 16 }}\n                rules={[{ required: true, message: '请选择文章!' }]}\n              >\n                <Select\n                  labelInValue\n                  mode=\"multiple\"\n                  disabled={!sortIdsArr?.length}\n                  loading={tagLoading}\n                  notFoundContent={null}\n                  filterOption={false}\n                >\n                  {tagList?.map?.((tag) => (\n                    <Select.Option value={tag.id} key={tag.id}>\n                      {tag.name}\n                    </Select.Option>\n                  ))}\n                </Select>\n              </Form.Item>\n            </Col>\n          </Row>\n        </Form.Item>\n        <Form.Item label=\"置顶\" name=\"isTop\" rules={[{ required: true, message: '请选择是否置顶!' }]}>\n          <Select>\n            <Select.Option value={1}>是</Select.Option>\n            <Select.Option value={0}>否</Select.Option>\n          </Select>\n        </Form.Item>\n        <Form.Item\n          label=\"封面\"\n          name=\"imageUrl\"\n          valuePropName=\"fileList\"\n          getValueFromEvent={formatFileList}\n          rules={[{ required: true, message: '请上传封面' }]}\n        >\n          <Upload.Crop maxFiles={1} listType=\"picture-card\" accept=\"image/*\" cropperProps={{ aspectRatio: 23 / 16 }}>\n            <div>\n              <PlusOutlined />\n              <div style={{ marginTop: 8 }}>Upload</div>\n            </div>\n          </Upload.Crop>\n        </Form.Item>\n        <Form.Item label=\"摘要\" name=\"abstract\">\n          <Input.TextArea rows={2} />\n        </Form.Item>\n        <Form.Item label=\"正文\" name=\"content\" rules={[{ required: true, message: '请输入正文!' }]} style={{ marginBottom: 0 }}>\n          <RichEditor />\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n})\n\nexport default EditForm\n","import React, { memo, useEffect, useState, useMemo, useCallback, useRef } from 'react'\nimport { Drawer, Tag, Row, Col, Comment, Button, List, Divider, Form, Select, Input, InputNumber, message } from 'antd'\nimport moment from 'moment'\nimport {\n  TagsOutlined,\n  ReloadOutlined,\n  UpCircleOutlined,\n  DownCircleOutlined,\n  CaretUpOutlined,\n  CaretDownOutlined,\n  ClockCircleOutlined,\n  EditOutlined,\n} from '@ant-design/icons'\nimport { useService } from '@common/hooks'\nimport { RichEditor } from '@common/components'\nimport { useSelector } from 'react-redux'\nimport { adminReplyServices } from '@blog-admin/services/reply'\nimport type { ReplyTypeCollection } from '@blog-admin/types'\nimport type { DrawerProps } from 'antd/lib/drawer'\nimport type { TagProps } from 'antd/lib/tag'\nimport type { ButtonProps } from 'antd/lib/button'\nimport type { FC, ReactNode } from 'react'\nimport type { StoreState } from '@common/store/types'\nimport type { DetailItem } from '@blog-admin/containers/article'\n\ninterface DetailDrawerProps extends DrawerProps {\n  detailItem: DetailItem\n}\n\ntype FormattedReplyItem = ReplyTypeCollection['listItemByAdminRole'] & { children?: ReplyTypeCollection['listItemByAdminRole'][] }\nexport type HandleReplyItems = (type: 'remove' | 'approve' | 'disapprove' | 'top' | 'unTop', record?: FormattedReplyItem) => void\n\nconst DetailDrawer: FC<DetailDrawerProps> = memo((props) => {\n  const { visible, detailItem, onClose } = props\n  const formRef = useRef<HTMLDivElement>(null)\n  const [form] = Form.useForm<ReplyTypeCollection['formDataWhenEdited']>()\n  const [replyBoxVisible, setReplyBoxVisible] = useState<boolean>(false)\n  const [clientHeight, setClientHeight] = useState<number>(document.documentElement.clientHeight)\n  const [replyConditionQuery, setReplyConditionQuery] = useState<ReplyTypeCollection['getListParamsByAdminRole']['conditionQuery']>({\n    prettyFormat: true,\n    articleIdsArr: [detailItem.id],\n    orderBy: undefined,\n  })\n\n  const getReplyListParams = useMemo<ReplyTypeCollection['getListParamsByAdminRole']>(() => {\n    return {\n      index: 1,\n      size: 9999,\n      conditionQuery: replyConditionQuery,\n    }\n  }, [replyConditionQuery])\n\n  const [loading, replyRes, replyErr, forceRequest] = useService(adminReplyServices.getList, getReplyListParams)\n\n  const [replyTotal, replyList] = useMemo(() => {\n    if (replyErr) {\n      message.error(replyErr.message || '获取列表失败')\n      return [0, []]\n    }\n    return [replyRes?.data?.total || 0, replyRes?.data?.list || []]\n  }, [replyRes, replyErr])\n\n  const currentUser = useSelector<StoreState, StoreState['user']>((state) => state.user)\n\n  const replySort = useCallback<TagProps['onClick']>(({ currentTarget }) => {\n    const name = currentTarget.id as ReplyTypeCollection['getListParamsByAdminRole']['conditionQuery']['orderBy']['name']\n    setReplyConditionQuery((prevValue) => ({ ...prevValue, orderBy: { name, by: prevValue?.orderBy?.by === 'ASC' ? 'DESC' : 'ASC' } }))\n  }, [])\n\n  const prepareForReplying = useCallback<(item: FormattedReplyItem) => void>(\n    (item) => {\n      const { from, id, parentId: pid } = item\n      const parentId = pid > 0 ? pid : id\n      const to = { label: from?.nickName || '博主', key: from.id || detailItem.user.id }\n      setReplyBoxVisible((prevValue) => !prevValue)\n      setTimeout(() => {\n        form.setFieldsValue({ parentId, to })\n        formRef?.current?.scrollIntoView?.({ behavior: 'smooth' })\n      }, 100)\n    },\n    [form, detailItem],\n  )\n\n  const handleReply = useCallback<ButtonProps['onClick']>(() => {\n    form\n      .validateFields()\n      .then(async (values) => {\n        const { parentId, to, reply } = values\n        const toId = typeof to.key === 'number' ? to.key : undefined\n        message.loading({ content: '正在提交...', key: 'saveData', duration: 0 })\n        const [, saveErr] = await adminReplyServices.save({ toId, parentId, reply, articleId: detailItem.id })\n        if (saveErr) {\n          message.error({ content: saveErr.message || '提交失败', key: 'saveData' })\n          return\n        }\n        message.success({ content: '操作成功', key: 'saveData' })\n        forceRequest()\n        form.resetFields()\n        setReplyBoxVisible((prevValue) => !prevValue)\n      })\n      .catch((error) => {\n        message.error(error.message || '请检查表单填写是否正确')\n      })\n  }, [form, detailItem, forceRequest])\n\n  const handleReplyItems = useCallback<HandleReplyItems>(\n    async (type, record) => {\n      const handlingItems = [record].map((item) => ({ id: item.id, parentId: item.parentId }))\n      const [, err] = await adminReplyServices[type]({ items: handlingItems })\n      if (err) {\n        message.error('操作失败')\n        return\n      }\n      forceRequest()\n    },\n    [forceRequest],\n  )\n\n  const getCommentComponent = useCallback<(item: FormattedReplyItem) => ReactNode>(\n    (item) => {\n      const { roleName } = currentUser\n      const { id, createDate, from, isApproved, to, parentId, children, reply } = item\n      return (\n        <Comment\n          key={id}\n          actions={[\n            <span key=\"createDate\">{moment(new Date(createDate)).format('YYYY-MM-DD')}</span>,\n            <a key=\"reply\" onClick={() => prepareForReplying(item)} style={{ fontSize: 12 }}>\n              回复\n            </a>,\n            roleName === 'admin' && (\n              <a onClick={() => handleReplyItems('remove', item)} style={{ color: 'red', marginLeft: 10, fontSize: 12 }}>\n                删除\n              </a>\n            ),\n            roleName === 'admin' && isApproved === 0 && (\n              <a onClick={() => handleReplyItems('approve', item)} style={{ color: '#66CD00', marginLeft: 10, fontSize: 12 }}>\n                展示\n              </a>\n            ),\n            roleName === 'admin' && isApproved === 1 && (\n              <a onClick={() => handleReplyItems('disapprove', item)} style={{ color: '#BF3EFF', marginLeft: 10, fontSize: 12 }}>\n                隐藏\n              </a>\n            ),\n          ]}\n          author={`${from.nickName}${parentId ? `回复@ ${to.nickName}` : ''}`}\n          avatar={from?.avatar || `${__SERVER_ORIGIN__ || ''}/public/assets/images/default/avatar.jpeg`}\n          content={<span style={{ color: isApproved === 0 ? 'lightgray' : '' }}>{reply}</span>}\n        >\n          {children?.map?.((item) => getCommentComponent(item))}\n        </Comment>\n      )\n    },\n    [currentUser, handleReplyItems, prepareForReplying],\n  )\n\n  useEffect(() => {\n    const onWindowResize = () => setClientHeight(document.documentElement.clientHeight)\n    window.addEventListener('resize', onWindowResize)\n    return () => removeEventListener('resize', onWindowResize)\n  }, [])\n\n  return (\n    <Drawer\n      visible={visible}\n      title={\n        <div style={{ textAlign: 'center' }}>\n          <span style={{ marginRight: 10 }}>{detailItem.title}</span>\n          <Tag color=\"purple\">\n            <TagsOutlined style={{ marginRight: 10 }} />\n            {detailItem.category.sort.name},{detailItem.category.name}\n          </Tag>\n        </div>\n      }\n      placement=\"bottom\"\n      height={clientHeight - 70}\n      closable\n      onClose={onClose}\n    >\n      <Row justify=\"center\" gutter={24}>\n        <Col span={16} style={{ maxHeight: clientHeight - 170, overflow: 'auto' }}>\n          <div style={{ paddingRight: 15 }}>\n            {detailItem?.tags?.length > 0 && (\n              <p style={{ textIndent: '2em' }}>\n                <b>标签：</b>\n                {detailItem.tags.map((tag) => (\n                  <Tag style={{ textIndent: '0em' }} key={tag.id}>\n                    {tag.name}\n                  </Tag>\n                ))}\n              </p>\n            )}\n            {detailItem.abstract && (\n              <p style={{ textIndent: '2em' }}>\n                <b>摘要：</b>\n                {detailItem.abstract}\n              </p>\n            )}\n            <img src={detailItem.imageUrl || `${__SERVER_ORIGIN__ || ''}/public/assets/images/default/article.jpeg`} width=\"100%\" />\n            <RichEditor.Preview value={detailItem.content} />\n            <div style={{ marginBottom: 10, fontSize: 12, textAlign: 'center' }}>\n              <span>\n                <ClockCircleOutlined style={{ marginRight: 10 }} />\n                {moment(new Date(detailItem.createDate)).format('YYYY-MM-DD')}\n              </span>\n              <span style={{ marginLeft: 20 }}>\n                <EditOutlined style={{ marginRight: 10 }} />\n                {moment(new Date(detailItem.updateDate)).format('YYYY-MM-DD')}\n              </span>\n            </div>\n          </div>\n        </Col>\n        <Col span={8}>\n          <div ref={formRef} style={{ marginBottom: 30 }}>\n            <h2>\n              <span style={{ marginRight: 10 }}>回复区</span>\n              {replyBoxVisible ? (\n                <DownCircleOutlined style={{ color: '#1890FF' }} onClick={() => setReplyBoxVisible((prevValue) => !prevValue)} />\n              ) : (\n                <UpCircleOutlined style={{ color: '#1890FF' }} onClick={() => setReplyBoxVisible((prevValue) => !prevValue)} />\n              )}\n            </h2>\n            <Divider style={{ marginTop: -5 }} />\n            {replyBoxVisible && (\n              <Form\n                form={form}\n                requiredMark={false}\n                labelCol={{ span: 4 }}\n                wrapperCol={{ span: 19 }}\n                initialValues={{\n                  to: { label: '博主', key: detailItem.user.id },\n                }}\n              >\n                <Form.Item label=\"对象\" name=\"to\">\n                  <Select labelInValue>\n                    <Select.Option value={detailItem.user.id}>博主</Select.Option>\n                  </Select>\n                </Form.Item>\n                <Form.Item label=\"回复\" name=\"reply\" rules={[{ required: true, message: '请输入回复内容!' }]}>\n                  <Input.TextArea rows={2} />\n                </Form.Item>\n                <Form.Item hidden name=\"parentId\">\n                  <InputNumber />\n                </Form.Item>\n                <Form.Item wrapperCol={{ span: 23 }}>\n                  <div style={{ float: 'right' }}>\n                    <Button size=\"small\" style={{ marginRight: 10 }} onClick={() => form.resetFields()}>\n                      重置\n                    </Button>\n                    <Button size=\"small\" type=\"primary\" onClick={handleReply}>\n                      发送\n                    </Button>\n                  </div>\n                </Form.Item>\n              </Form>\n            )}\n          </div>\n          <div>\n            <h2>\n              <span>评论({replyTotal || 0})</span>\n              <ReloadOutlined style={{ color: '#1890FF', marginLeft: 10 }} onClick={forceRequest} />\n              <Tag color=\"magenta\" id=\"createDate\" style={{ marginLeft: 10 }} onClick={replySort}>\n                时间\n                {replyConditionQuery?.orderBy?.name === 'createDate' && replyConditionQuery?.orderBy?.by === 'ASC' ? (\n                  <CaretUpOutlined />\n                ) : (\n                  <CaretDownOutlined />\n                )}\n              </Tag>\n            </h2>{' '}\n            <Divider style={{ marginTop: -5 }} />\n            <div\n              style={{\n                maxHeight: replyBoxVisible ? clientHeight - 460 : clientHeight - 300,\n                overflow: 'auto',\n              }}\n            >\n              <List loading={loading} itemLayout=\"horizontal\" dataSource={replyList || []} renderItem={getCommentComponent} />\n            </div>\n          </div>\n        </Col>\n      </Row>\n    </Drawer>\n  )\n})\n\nexport default DetailDrawer\n","import React, { memo, useCallback, useState, useEffect, useMemo, useImperativeHandle, forwardRef } from 'react'\nimport { Modal, Button, Row, Col, Tag, Radio, Badge, Alert, Tree, message } from 'antd'\nimport { useService } from '@common/hooks'\nimport { adminSortServices } from '@blog-admin/services/sort'\nimport { adminTagServices } from '@blog-admin/services/tag'\nimport type { SetStateAction, Dispatch, ForwardRefRenderFunction } from 'react'\nimport type { ModalProps } from 'antd/lib/modal'\nimport type { ConditionQuery } from '@blog-admin/containers/article'\nimport type { Sort, TagTypeCollection } from '@blog-admin/types'\n\ntype FilterRequest = (type: 'ok' | 'exit' | 'clear') => void\n\ninterface FilterModalProps extends ModalProps {\n  conditionQuery: ConditionQuery\n  onSetFilterModalVisible: Dispatch<SetStateAction<boolean>>\n  onSetConditionQuery: Dispatch<SetStateAction<ConditionQuery>>\n}\n\nexport type TemporaryCondition = {\n  filteredSortArr?: string[]\n  tagIdsArr?: number[]\n  filterFlag?: boolean\n}\n\nexport type FilterModalRef = { clear: () => void }\n\nconst FilterModal: ForwardRefRenderFunction<FilterModalRef, FilterModalProps> = (props, ref) => {\n  const { visible, conditionQuery, onSetFilterModalVisible, onSetConditionQuery } = props\n\n  const [filterType, setFilterType] = useState<'catalog' | 'tag'>('catalog')\n  const [allSortList, setAllSortList] = useState<Sort['getListResByAdminRole']['list']>([])\n  const [temporaryCondition, setTemporaryCondition] = useState<TemporaryCondition>({})\n\n  const getListParams = useMemo<TagTypeCollection['getListParamsByAdminRole']>(\n    () => ({\n      index: 1,\n      size: 999,\n      conditionQuery: {},\n    }),\n    [],\n  )\n\n  const [, tagRes, tagErr] = useService(adminTagServices.getList, getListParams)\n  const tagList = useMemo(() => {\n    if (tagErr) {\n      message.error(tagErr.message || '获取列表失败')\n      return []\n    }\n    return tagRes?.data?.list || []\n  }, [tagRes, tagErr])\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      clear: () => setTemporaryCondition({}),\n    }),\n    [],\n  )\n\n  const filterRequest = useCallback<FilterRequest>(\n    (type) => {\n      if (type === 'clear') {\n        setTemporaryCondition({})\n        return\n      }\n      onSetFilterModalVisible((prevValue) => !prevValue)\n      if (type === 'exit') {\n        setTemporaryCondition((prevValue) => ({\n          ...prevValue,\n          filteredSortArr: conditionQuery?.filteredSortArr || [],\n          tagIdsArr: conditionQuery?.tagIdsArr || [],\n        }))\n        return\n      }\n      const { filteredSortArr = [], tagIdsArr = [] } = temporaryCondition\n      const category = { sortIdsArr: [], cateIdsArr: [] }\n      filteredSortArr.forEach((item) => {\n        const arr = item.split('-')\n        if (arr.length === 1) {\n          category.sortIdsArr.push(Number(arr[0]))\n        } else if (!category.sortIdsArr.includes(Number(arr[0]))) {\n          category.cateIdsArr.push(Number(arr.pop()))\n        }\n      })\n      onSetConditionQuery((oldValue) => ({\n        ...oldValue,\n        filteredSortArr,\n        tagIdsArr,\n        category,\n      }))\n    },\n    [conditionQuery, temporaryCondition, onSetFilterModalVisible, onSetConditionQuery],\n  )\n\n  const handleTagSelect = useCallback((id, checked) => {\n    setTemporaryCondition((prevValue) => {\n      const { tagIdsArr = [] } = prevValue\n      const newTagIds = checked ? [...tagIdsArr, id] : tagIdsArr.filter((tagId) => tagId !== id)\n      return { ...prevValue, tagIdsArr: newTagIds }\n    })\n  }, [])\n\n  useEffect(() => {\n    ;(async () => {\n      const [sortRes] = await adminSortServices.getList({ index: 1, size: 999 })\n      setAllSortList(sortRes?.data?.list || [])\n    })()\n  }, [])\n\n  return (\n    <Modal\n      destroyOnClose\n      visible={visible}\n      title=\"请选择筛选条件\"\n      onCancel={() => filterRequest('exit')}\n      footer={[\n        <Button key=\"exit\" onClick={() => filterRequest('exit')}>\n          不更改并退出\n        </Button>,\n        <Button key=\"clear\" danger onClick={() => filterRequest('clear')}>\n          清空\n        </Button>,\n        <Button key=\"ok\" type=\"primary\" onClick={() => filterRequest('ok')}>\n          确定\n        </Button>,\n      ]}\n    >\n      <div style={{ textAlign: 'center' }}>\n        <Radio.Group size=\"small\" value={filterType} buttonStyle=\"solid\" onChange={({ target }) => setFilterType(target.value)}>\n          <Radio.Button value=\"catalog\">\n            <Badge dot={temporaryCondition?.filteredSortArr?.length > 0}>\n              <span style={{ marginLeft: 10, marginRight: 10 }}>按分类</span>\n            </Badge>\n          </Radio.Button>\n          <Radio.Button value=\"tag\">\n            <Badge dot={temporaryCondition?.tagIdsArr?.length > 0}>\n              <span style={{ marginLeft: 10, marginRight: 10 }}>按标签</span>\n            </Badge>\n          </Radio.Button>\n        </Radio.Group>\n      </div>\n      <Alert message=\"筛选分两种类别，请注意您是否需要同时进行两种类别的筛选！\" type=\"warning\" showIcon style={{ margin: '15px 0px' }} />\n      {filterType === 'catalog' && (\n        <Tree\n          checkable\n          showLine\n          onCheck={(value) => setTemporaryCondition((prevValue) => ({ ...prevValue, filteredSortArr: (value as unknown) as string[] }))}\n          expandedKeys={temporaryCondition?.filteredSortArr || []}\n          checkedKeys={temporaryCondition?.filteredSortArr || []}\n        >\n          {allSortList.map((item) => (\n            <Tree.TreeNode title={item.name} key={`${item.id}`} selectable={false} disabled={item.isEnable === 0}>\n              {item.categories.map((category) => (\n                <Tree.TreeNode\n                  title={category.name}\n                  key={`${item.id}-${category.id}`}\n                  selectable={false}\n                  disabled={item.isEnable === 1 ? category.isEnable === 0 : true}\n                />\n              ))}\n            </Tree.TreeNode>\n          ))}\n        </Tree>\n      )}\n      {filterType === 'tag' && (\n        <Row>\n          <Col span={3} className=\"mt5\">\n            请选择：\n          </Col>\n          <Col span={21}>\n            {tagList.map((item) => (\n              <Tag.CheckableTag\n                key={item.id}\n                checked={temporaryCondition?.tagIdsArr?.includes?.(item.id)}\n                onChange={(checked) => handleTagSelect(item.id, checked)}\n                className=\"mt5\"\n              >\n                {item.name}\n              </Tag.CheckableTag>\n            ))}\n          </Col>\n        </Row>\n      )}\n    </Modal>\n  )\n}\n\nexport default memo(forwardRef(FilterModal))\n","import React, { memo, useMemo, useState, useCallback, useRef, useEffect } from 'react'\nimport { WrappedContainer, Ellipsis } from '@common/components'\nimport { useService } from '@common/hooks'\nimport { message, Row, Col, Button, List, Card, Tag, Input, Tooltip, Badge, Checkbox } from 'antd'\nimport {\n  EyeOutlined,\n  DeleteOutlined,\n  HomeOutlined,\n  ReloadOutlined,\n  PlusOutlined,\n  StarOutlined,\n  CaretDownOutlined,\n  CaretUpOutlined,\n  EyeInvisibleOutlined,\n  VerticalAlignTopOutlined,\n  VerticalAlignMiddleOutlined,\n  FilterOutlined,\n  AlignCenterOutlined,\n  TagsOutlined,\n} from '@ant-design/icons'\nimport EditForm from '@blog-admin/components/article/edit-form'\nimport DetailDrawer from '@blog-admin/components/article/detail-drawer'\nimport FilterModal, { FilterModalRef, TemporaryCondition } from '@blog-admin/components/article/filter-modal'\nimport moment from 'moment'\nimport { adminArticleServices } from '@blog-admin/services/article'\nimport { adminSortServices } from '@blog-admin/services/sort'\nimport type { FC, ReactNode } from 'react'\nimport type { RouteComponentProps } from 'react-router'\nimport type { ArticleTypeCollection, Sort } from '@blog-admin/types'\nimport type { ButtonProps } from 'antd/lib/button'\nimport type { PaginationProps } from 'antd/lib/pagination'\nimport type { SearchProps } from 'antd/lib/input/Search'\nimport type { TagProps } from 'antd/lib/tag'\n\nexport type ListItem = ArticleTypeCollection['listItemByAdminRole']\nexport type ToggleEditorialPanel = (record?: ListItem) => void\nexport type SaveData = (params: ArticleTypeCollection['editParams'], callback?: () => void) => void\nexport type HandleItems = (type: 'remove' | 'lock' | 'unlock' | 'top' | 'unTop', record?: ListItem, callback?: () => void) => void\nexport type ConditionQuery = ArticleTypeCollection['getListParamsByAdminRole']['conditionQuery'] & TemporaryCondition\ntype ToggleReadArticle = (record?: ListItem) => void\nexport type DetailItem = ListItem & { content: string }\n\nconst ArticleManagement: FC<RouteComponentProps> = memo(() => {\n  const inputSearchRef = useRef<Input>(null)\n  const filterModalRef = useRef<FilterModalRef>(null)\n  const [pagination, setPagination] = useState<{ current: number; pageSize: number }>({ current: 1, pageSize: 10 })\n  const [editFormVisible, setEditFormVisible] = useState<boolean>(false)\n  const [editFormData, setEditFormData] = useState<DetailItem>(null)\n  const [selectedItems, setSelectedItems] = useState<ListItem[]>([])\n  const [allSelectedFlag, setAllSelectedFlag] = useState<boolean>(false)\n  const [conditionQuery, setConditionQuery] = useState<ConditionQuery>({})\n  const [filterModalVisible, setFilterModalVisible] = useState<boolean>(false)\n  const [showSorterFlag, setShowSorterFlag] = useState<boolean>(false)\n  const [allSortList, setAllSortList] = useState<Sort['getListResByAdminRole']['list']>([])\n  const [oneDetail, setOneDetail] = useState<DetailItem>(null)\n\n  const getListParams = useMemo<ArticleTypeCollection['getListParamsByAdminRole']>(() => {\n    const neededConditionQuery = { ...conditionQuery, tagIdsArr: undefined, filteredSortArr: undefined }\n    return {\n      index: pagination.current,\n      size: pagination.pageSize,\n      conditionQuery: neededConditionQuery,\n    }\n  }, [pagination, conditionQuery])\n\n  const [loading, articleRes, articleErr, forceRequest] = useService(adminArticleServices.getList, getListParams)\n\n  const [total, dataSource] = useMemo(() => {\n    if (articleErr) {\n      message.error(articleErr.message || '获取列表失败')\n      return [0, []]\n    }\n    return [articleRes?.data?.total || 0, articleRes?.data?.list || []]\n  }, [articleRes, articleErr])\n\n  const showDataByDefaultWay = useCallback<(event: React.MouseEvent<HTMLElement, MouseEvent>) => void>(() => {\n    setConditionQuery({})\n    filterModalRef.current?.clear()\n    inputSearchRef.current?.setValue?.('')\n    setPagination((prevValue) => ({ ...prevValue, current: 1 }))\n  }, [])\n\n  const handleSearch = useCallback<SearchProps['onSearch']>((value) => {\n    setPagination((prevValue) => ({ ...prevValue, current: 1 }))\n    setConditionQuery((prevValue) => ({ ...prevValue, reply: value.trim() }))\n  }, [])\n\n  const toggleEditorialPanel = useCallback<(record?: ListItem) => void>(async (record) => {\n    if (!record) {\n      setEditFormVisible((prevValue) => !prevValue)\n      return\n    }\n    const [contentRes, contentErr] = await adminArticleServices.getContent({ articleId: record.id })\n    if (contentErr) {\n      message.error('获取内容详情失败')\n      return\n    }\n    setEditFormData({ ...record, content: contentRes.data })\n    setEditFormVisible((prevValue) => !prevValue)\n  }, [])\n\n  const saveData = useCallback<SaveData>(\n    async (params, callback) => {\n      message.loading({ content: '正在提交...', key: 'saveData', duration: 0 })\n      const [, saveErr] = await adminArticleServices.save(params)\n      if (saveErr) {\n        message.error({ content: saveErr.message || '提交失败', key: 'saveData' })\n        return\n      }\n      if (callback) callback()\n      message.success({ content: '操作成功', key: 'saveData' })\n      const { pageSize, current } = pagination\n      if (dataSource?.length === pageSize) {\n        setPagination((prevValue) => ({ ...prevValue, current: current + 1 }))\n      } else {\n        forceRequest()\n      }\n    },\n    [pagination, dataSource, forceRequest],\n  )\n\n  const toggleSelectAll = useCallback<ButtonProps['onClick']>(() => {\n    if (!dataSource?.length) return\n    const uniqueSelectedItems = dataSource.filter((dataItem) => !selectedItems.some((selectedItem) => selectedItem.id === dataItem.id))\n    const newSelectedItems = allSelectedFlag\n      ? selectedItems.filter((selectedItem) => !dataSource.some((dataItem) => dataItem.id === selectedItem.id))\n      : [...selectedItems, ...uniqueSelectedItems]\n    setSelectedItems(newSelectedItems)\n    setAllSelectedFlag(!allSelectedFlag)\n  }, [dataSource, selectedItems, allSelectedFlag])\n\n  const toggleSelectOne = useCallback<ToggleEditorialPanel>(\n    (record) => {\n      const newSelectedItems = selectedItems.some((selectedItem) => selectedItem.id === record.id)\n        ? selectedItems.filter((selectedItem) => selectedItem.id !== record.id)\n        : [...selectedItems, record]\n      setSelectedItems(newSelectedItems)\n      setAllSelectedFlag(\n        !dataSource?.length\n          ? false\n          : dataSource.every((listItem) => newSelectedItems.some((selectedItem) => selectedItem.id === listItem.id)),\n      )\n    },\n    [selectedItems, dataSource],\n  )\n\n  const toggleShowSorter = useCallback<() => void>(() => {\n    setShowSorterFlag((prevValue) => !prevValue)\n  }, [])\n\n  const handleSort = useCallback<TagProps['onClick']>(\n    ({ currentTarget }) => {\n      const { id } = currentTarget\n      if (id === 'default') {\n        setConditionQuery((prevValue) => ({ ...prevValue, orderBy: undefined }))\n        toggleShowSorter()\n        return\n      }\n      setConditionQuery((prevValue) => ({\n        ...prevValue,\n        orderBy: {\n          name: id,\n          by: prevValue?.orderBy?.by === 'ASC' ? 'DESC' : 'ASC',\n        } as ConditionQuery['orderBy'],\n      }))\n      setPagination((prevValue) => ({ ...prevValue, current: 1 }))\n    },\n    [toggleShowSorter],\n  )\n\n  const pageChange = useCallback<PaginationProps['onChange']>((current, pageSize) => {\n    setPagination({ current, pageSize })\n  }, [])\n\n  const handleItems = useCallback<HandleItems>(\n    async (type, record, callback) => {\n      const handlingItems = (record ? [record] : selectedItems).map((item) => ({ id: item.id }))\n      const [, err] = await adminArticleServices[type]({ items: handlingItems })\n      if (err) {\n        message.error('操作失败')\n        return\n      }\n      if (callback) callback()\n      message.success('操作成功')\n      setSelectedItems([])\n      const { current } = pagination\n      if (type === 'remove' && handlingItems?.length > dataSource?.length) {\n        setPagination((prevValue) => ({ ...prevValue, current: current - 1 || 0 }))\n      } else {\n        forceRequest()\n      }\n    },\n    [selectedItems, pagination, dataSource, forceRequest],\n  )\n\n  const toggleReadArticle = useCallback<ToggleReadArticle>(async (record?) => {\n    if (!record) {\n      setOneDetail(null)\n      return\n    }\n    const [contentRes, contentErr] = await adminArticleServices.getContent({ articleId: record.id })\n    if (contentErr) {\n      message.error('获取内容详情失败')\n      return\n    }\n    setOneDetail({ ...record, content: contentRes.data })\n  }, [])\n\n  useEffect(() => {\n    setAllSelectedFlag(\n      !dataSource?.length ? false : dataSource.every((listItem) => selectedItems.some((selectedItem) => selectedItem.id === listItem.id)),\n    )\n  }, [selectedItems, dataSource])\n\n  useEffect(() => {\n    ;(async () => {\n      const [sortRes] = await adminSortServices.getList({ index: 1, size: 999 })\n      setAllSortList(sortRes?.data?.list || [])\n    })()\n  }, [])\n\n  const actionBarComponent = useMemo<ReactNode>(() => {\n    return (\n      <>\n        <Row align=\"middle\" style={{ marginBottom: 15 }}>\n          <Col xs={12} sm={13} md={15} lg={16} xl={17}>\n            <Button\n              icon={<PlusOutlined />}\n              type=\"primary\"\n              size=\"small\"\n              onClick={() => {\n                toggleEditorialPanel()\n              }}\n            >\n              新增\n            </Button>\n            <Button\n              icon={<FilterOutlined />}\n              type=\"primary\"\n              danger={Boolean(conditionQuery?.filteredSortArr?.length || conditionQuery?.tagIdsArr?.length)}\n              size=\"small\"\n              onClick={() => {\n                setFilterModalVisible(true)\n              }}\n              style={{ marginLeft: 10 }}\n            >\n              筛选\n            </Button>\n            <Button\n              icon={<StarOutlined />}\n              type=\"primary\"\n              danger={allSelectedFlag}\n              size=\"small\"\n              onClick={toggleSelectAll}\n              style={{ marginLeft: 10 }}\n            >\n              {allSelectedFlag ? '反选' : '全选'}\n              &nbsp;\n            </Button>\n            <Button\n              icon={<AlignCenterOutlined />}\n              type=\"primary\"\n              danger={showSorterFlag}\n              size=\"small\"\n              onClick={toggleShowSorter}\n              style={{ marginLeft: 10 }}\n            >\n              排序\n            </Button>\n          </Col>\n          <Col xs={2} sm={2} md={1} lg={1} xl={1}>\n            <Tooltip title=\"默认展示\">\n              <Button type=\"primary\" icon={<HomeOutlined />} shape=\"circle\" size=\"small\" onClick={showDataByDefaultWay} />\n            </Tooltip>\n          </Col>\n          <Col xs={10} sm={9} md={8} lg={7} xl={6}>\n            <Input.Search ref={inputSearchRef} placeholder=\"Enter something\" onSearch={handleSearch} enterButton allowClear />\n          </Col>\n        </Row>\n        {(selectedItems?.length > 0 || showSorterFlag) && (\n          <Row align=\"middle\" justify=\"space-between\" style={{ marginBottom: 15 }}>\n            <Col>\n              {selectedItems?.length > 0 && (\n                <>\n                  <Badge count={selectedItems.length} title=\"已选项数\">\n                    <Button\n                      icon={<ReloadOutlined />}\n                      type=\"primary\"\n                      size=\"small\"\n                      onClick={() => {\n                        setSelectedItems([])\n                      }}\n                    >\n                      清空\n                    </Button>\n                  </Badge>\n                  <Button\n                    icon={<DeleteOutlined />}\n                    type=\"primary\"\n                    danger\n                    size=\"small\"\n                    onClick={() => {\n                      handleItems('remove')\n                    }}\n                    style={{ marginLeft: 10 }}\n                  >\n                    删除\n                  </Button>\n                  <Button\n                    icon={<EyeOutlined />}\n                    type=\"primary\"\n                    size=\"small\"\n                    onClick={() => {\n                      handleItems('unlock')\n                    }}\n                    style={{ marginLeft: 10 }}\n                  >\n                    启动\n                  </Button>\n                  <Button\n                    icon={<EyeInvisibleOutlined />}\n                    type=\"primary\"\n                    size=\"small\"\n                    onClick={() => {\n                      handleItems('lock')\n                    }}\n                    style={{ marginLeft: 10 }}\n                  >\n                    禁用\n                  </Button>\n                  <Button\n                    icon={<VerticalAlignTopOutlined />}\n                    type=\"primary\"\n                    size=\"small\"\n                    onClick={() => {\n                      handleItems('top')\n                    }}\n                    style={{ marginLeft: 10 }}\n                  >\n                    置顶\n                  </Button>\n                  <Button\n                    icon={<VerticalAlignMiddleOutlined />}\n                    type=\"primary\"\n                    size=\"small\"\n                    onClick={() => {\n                      handleItems('unTop')\n                    }}\n                    style={{ marginLeft: 10 }}\n                  >\n                    取置\n                  </Button>\n                </>\n              )}\n            </Col>\n            <Col>\n              {showSorterFlag && (\n                <>\n                  <Tag color=\"magenta\" id=\"default\" style={{ marginLeft: 10, cursor: 'pointer' }} onClick={handleSort}>\n                    默认\n                  </Tag>\n                  <Tag color=\"magenta\" id=\"createDate\" style={{ cursor: 'pointer' }} onClick={handleSort}>\n                    时间\n                    {conditionQuery?.orderBy?.name === 'createDate' && conditionQuery?.orderBy?.by === 'DESC' ? (\n                      <CaretDownOutlined />\n                    ) : (\n                      <CaretUpOutlined />\n                    )}\n                  </Tag>\n                  <Tag color=\"magenta\" id=\"isApproved\" style={{ cursor: 'pointer' }} onClick={handleSort}>\n                    显示\n                    {conditionQuery?.orderBy?.name === 'isEnable' && conditionQuery?.orderBy?.by === 'DESC' ? (\n                      <CaretDownOutlined />\n                    ) : (\n                      <CaretUpOutlined />\n                    )}\n                  </Tag>\n                  <Tag color=\"magenta\" id=\"isTop\" style={{ cursor: 'pointer' }} onClick={handleSort}>\n                    置顶\n                    {conditionQuery?.orderBy?.name === 'isTop' && conditionQuery?.orderBy?.by === 'DESC' ? (\n                      <CaretDownOutlined />\n                    ) : (\n                      <CaretUpOutlined />\n                    )}\n                  </Tag>\n                </>\n              )}\n            </Col>\n          </Row>\n        )}\n      </>\n    )\n  }, [\n    showSorterFlag,\n    conditionQuery,\n    selectedItems,\n    allSelectedFlag,\n    toggleEditorialPanel,\n    toggleSelectAll,\n    handleItems,\n    showDataByDefaultWay,\n    handleSearch,\n    toggleShowSorter,\n    handleSort,\n  ])\n\n  const contentListComponent = useMemo<ReactNode>(() => {\n    return (\n      <List\n        loading={loading}\n        dataSource={dataSource}\n        grid={{ gutter: 16, xs: 1, sm: 1, md: 2, lg: 2, xl: 3, xxl: 3 }}\n        pagination={{\n          showQuickJumper: true,\n          showSizeChanger: true,\n          onChange: pageChange,\n          onShowSizeChange: pageChange,\n          pageSizeOptions: ['10', '20', '30', '40'],\n          defaultPageSize: 10,\n          total,\n          ...pagination,\n        }}\n        renderItem={(item) => (\n          <List.Item style={{ background: 'lightgray', borderRadius: 5 }}>\n            <Card\n              size=\"small\"\n              cover={<img alt=\"cover\" src={item.imageUrl || `${__SERVER_ORIGIN__ || ''}/public/assets/images/default/article.jpeg`} />}\n              actions={[\n                <Button key=\"form\" size=\"small\" type=\"primary\" onClick={() => toggleEditorialPanel(item)}>\n                  编辑\n                </Button>,\n                <Button key=\"delete\" size=\"small\" type=\"primary\" danger onClick={() => handleItems('remove', item)}>\n                  删除\n                </Button>,\n                <Button key=\"whetherTop\" size=\"small\" type=\"primary\" onClick={() => handleItems(item.isTop === 1 ? 'unTop' : 'top', item)}>\n                  {item.isTop === 1 ? '取置' : '置顶'}\n                </Button>,\n                <Button\n                  key=\"whetherLock\"\n                  size=\"small\"\n                  type=\"primary\"\n                  onClick={() => handleItems(item.isEnable === 1 ? 'lock' : 'unlock', item)}\n                >\n                  {item.isEnable === 1 ? '禁用' : '启用'}\n                </Button>,\n                <div key=\"select\" style={{ width: '100%', height: '100%' }} onClick={() => toggleSelectOne(item)}>\n                  <Checkbox checked={selectedItems.some(({ id }) => id === item.id)} />,\n                </div>,\n              ]}\n              style={{\n                position: 'relative',\n                overflow: 'hidden',\n                background: (selectedItems.some(({ id }) => id === item.id) && '#FFFFE0') || (!item.isEnable && '#fafafa'),\n              }}\n            >\n              <Card.Meta\n                title={\n                  <Tooltip title={item.title}>\n                    <div style={{ cursor: 'pointer' }} onClick={() => toggleReadArticle(item)}>\n                      {item.title}\n                    </div>\n                  </Tooltip>\n                }\n                description={\n                  <>\n                    <div style={{ marginBottom: 5, fontSize: 12 }}>\n                      <Ellipsis lines={1}>\n                        标签：\n                        {item?.tags?.length > 0 ? item.tags.map((tag) => <Tag key={tag.id}>{tag.name}</Tag>) : '无'}\n                      </Ellipsis>\n                    </div>\n                    <Ellipsis lines={2} style={{ height: 40 }}>\n                      摘要：\n                      {item?.abstract || '无'}\n                    </Ellipsis>\n                    <div style={{ marginTop: 5, fontSize: 12 }}>\n                      <div style={{ float: 'left' }}>{moment(new Date(item.createDate)).format('YYYY-MM-DD')}</div>\n                      <div style={{ float: 'right' }}>{moment(new Date(item.updateDate)).format('YYYY-MM-DD')}</div>\n                    </div>\n                  </>\n                }\n              />\n              {item.isTop === 1 && (\n                <div\n                  style={{\n                    position: 'absolute',\n                    background: 'gray',\n                    top: 5,\n                    right: -55,\n                    width: 150,\n                    textAlign: 'center',\n                    overflow: 'hidden',\n                    transform: 'rotate(40deg)',\n                  }}\n                >\n                  <span style={{ color: 'yellow' }}>置顶</span>\n                </div>\n              )}\n              <Tag color=\"purple\" style={{ position: 'absolute', top: 0, left: 0 }}>\n                <TagsOutlined style={{ marginRight: 10 }} />\n                {item.category.sort.name},{item.category.name}\n              </Tag>\n            </Card>\n          </List.Item>\n        )}\n      />\n    )\n  }, [\n    loading,\n    dataSource,\n    total,\n    pagination,\n    selectedItems,\n    toggleReadArticle,\n    pageChange,\n    toggleSelectOne,\n    handleItems,\n    toggleEditorialPanel,\n  ])\n\n  const filterModalComponent = useMemo<ReactNode>(() => {\n    return (\n      <FilterModal\n        ref={filterModalRef}\n        visible={filterModalVisible}\n        conditionQuery={conditionQuery}\n        onSetFilterModalVisible={setFilterModalVisible}\n        onSetConditionQuery={setConditionQuery}\n      />\n    )\n  }, [filterModalVisible, conditionQuery])\n\n  const editFormComponent = useMemo<ReactNode>(() => {\n    return (\n      editFormVisible && (\n        <EditForm\n          visible={editFormVisible}\n          initialValues={editFormData}\n          allSortList={allSortList}\n          onToggleEditorialPanel={toggleEditorialPanel}\n          onSave={saveData}\n        />\n      )\n    )\n  }, [editFormVisible, editFormData, allSortList, toggleEditorialPanel, saveData])\n\n  const detailDrawerComponent = useMemo<ReactNode>(() => {\n    return oneDetail && <DetailDrawer detailItem={oneDetail} visible={Boolean(oneDetail)} onClose={() => toggleReadArticle()} />\n  }, [oneDetail, toggleReadArticle])\n\n  return (\n    <WrappedContainer>\n      {actionBarComponent}\n      {contentListComponent}\n      {editFormComponent}\n      {filterModalComponent}\n      {detailDrawerComponent}\n    </WrappedContainer>\n  )\n})\n\nexport default ArticleManagement\n\n// interface AppProps {\n//   user: StoreState['user']\n//   onClearUser: (flag?: boolean) => void\n// }\n\n// export default connect<Pick<AppProps, 'user'>, Pick<AppProps, 'onClearUser'>, Omit<AppProps, 'user' | 'onClearUser'>, StoreState>(\n//   (state: StoreState) => ({\n//     user: state.user,\n//   }),\n//   (dispatch: Dispatch<UserAction>) => ({\n//     onClearUser: (flag?: boolean) => dispatch({ type: UserActionType.LOGOUT }),\n//   }),\n// )(Article)\n","import { post } from '@common/utils'\nimport { articleApis } from '@blog-admin/services/apis'\nimport type { ServiceResult } from '@common/types'\nimport type { ArticleTypeCollection } from '@blog-admin/types'\n\nexport function getList(\n  params: Partial<ArticleTypeCollection['getListParamsByAdminRole']> = {},\n): ServiceResult<ArticleTypeCollection['getListResByAdminRole']> {\n  return post<ArticleTypeCollection['getListResByAdminRole'], typeof params>(articleApis.ADMIN_LIST, params)\n}\n\nexport function getContent(params: { articleId: number }): ServiceResult<string> {\n  return post<string, typeof params>(articleApis.ADMIN_CONTENT, params)\n}\n\nexport function save(params: ArticleTypeCollection['editParams']): ServiceResult {\n  return post<never, typeof params>(articleApis.ADMIN_SAVE, params)\n}\n\nexport function remove(params: ArticleTypeCollection['removeParams']): ServiceResult {\n  return post<never, typeof params>(articleApis.ADMIN_DELETE, params)\n}\n\nexport function lock(params: ArticleTypeCollection['lockParams']): ServiceResult {\n  return post<never, typeof params>(articleApis.ADMIN_LOCK, params)\n}\n\nexport function unlock(params: ArticleTypeCollection['unlockParams']): ServiceResult {\n  return post<never, typeof params>(articleApis.ADMIN_UNLOCK, params)\n}\n\nexport function top(params: ArticleTypeCollection['topParams']): ServiceResult {\n  return post<never, typeof params>(articleApis.ADMIN_TOP, params)\n}\n\nexport function unTop(params: ArticleTypeCollection['unTopParams']): ServiceResult {\n  return post<never, typeof params>(articleApis.ADMIN_UNTOP, params)\n}\n","import { post } from '@common/utils'\nimport { replyApis } from '@blog-admin/services/apis'\nimport type { ServiceResult } from '@common/types'\nimport type { ReplyTypeCollection } from '@blog-admin/types'\n\nexport function getList(\n  params: Partial<ReplyTypeCollection['getListParamsByAdminRole']> = {},\n): ServiceResult<ReplyTypeCollection['getListResByAdminRole']> {\n  return post<ReplyTypeCollection['getListResByAdminRole'], typeof params>(replyApis.ADMIN_LIST, params)\n}\n\nexport function save(params: ReplyTypeCollection['editParams']): ServiceResult {\n  return post<never, typeof params>(replyApis.ADMIN_SAVE, params)\n}\n\nexport function remove(params: ReplyTypeCollection['removeParams']): ServiceResult {\n  return post<never, typeof params>(replyApis.ADMIN_DELETE, params)\n}\n\nexport function top(params: ReplyTypeCollection['topParams']): ServiceResult {\n  return post<never, typeof params>(replyApis.ADMIN_TOP, params)\n}\n\nexport function unTop(params: ReplyTypeCollection['unTopParams']): ServiceResult {\n  return post<never, typeof params>(replyApis.ADMIN_UNTOP, params)\n}\n\nexport function approve(params: ReplyTypeCollection['approveParams']): ServiceResult {\n  return post<never, typeof params>(replyApis.ADMIN_APPROVE, params)\n}\n\nexport function disapprove(params: ReplyTypeCollection['disapproveParams']): ServiceResult {\n  return post<never, typeof params>(replyApis.ADMIN_DISAPPROVE, params)\n}\n","import { post } from '@common/utils'\nimport { sortApis } from '@blog-admin/services/apis'\nimport type { ServiceResult } from '@common/types'\nimport type { Sort } from '@blog-admin/types'\n\nexport function getList(params: Partial<Sort['getListParamsByAdminRole']> = {}): ServiceResult<Sort['getListResByAdminRole']> {\n  return post<Sort['getListResByAdminRole'], typeof params>(sortApis.ADMIN_LIST, params)\n}\n\nexport function save(params: Sort['editParams']): ServiceResult {\n  return post<never, typeof params>(sortApis.ADMIN_SAVE, params)\n}\n\nexport function remove(params: Sort['removeParams']): ServiceResult {\n  return post<never, typeof params>(sortApis.ADMIN_DELETE, params)\n}\n\nexport function lock(params: Sort['lockParams']): ServiceResult {\n  return post<never, typeof params>(sortApis.ADMIN_LOCK, params)\n}\n\nexport function unlock(params: Sort['unlockParams']): ServiceResult {\n  return post<never, typeof params>(sortApis.ADMIN_UNLOCK, params)\n}\n"],"sourceRoot":""}