{"version":3,"sources":["webpack://blog/./spa/b-blog/components/reply/edit-form.tsx","webpack://blog/./spa/b-blog/components/reply/filter-modal.tsx","webpack://blog/./spa/b-blog/containers/reply/index.tsx","webpack://blog/./spa/b-blog/services/article.ts","webpack://blog/./spa/b-blog/services/tag.ts","webpack://blog/./spa/b-blog/services/sort.ts","webpack://blog/./spa/b-blog/services/reply.ts","webpack://blog/./spa/b-blog/services/message.ts","webpack://blog/./spa/b-blog/services/category.ts"],"names":["memo","props","initialValues","visible","onSave","onToggleEditorialPanel","restProps","form","Form","useState","undefined","articleSearch","setArticleSearch","getListParams","useMemo","index","size","conditionQuery","title","trim","useService","articleServices","Boolean","id","articleLoading","articleRes","articleErr","articleList","message","data","list","handleCancel","useCallback","resetFields","handleOk","validateFields","then","values","to","isTop","reply","article","parentId","articleId","key","selectedArticle","find","toId","user","catch","error","editingFormData","from","prevArticle","label","toKey","toLabel","nickName","destroyOnClose","onOk","onCancel","maskClosable","labelCol","span","wrapperCol","name","rules","required","labelInValue","showSearch","disabled","loading","notFoundContent","filterOption","onSearch","map","value","rows","style","marginBottom","FilterModal","ref","onSetFilterModalVisible","onSetConditionQuery","filterType","setFilterType","allSortList","setAllSortList","temporaryCondition","setTemporaryCondition","useImperativeHandle","clear","filterRequest","type","prevValue","filteredSortArr","articleArr","commonFilterArr","isApproved","includes","isRoot","articleIdsArr","category","sortIdsArr","cateIdsArr","forEach","item","arr","split","length","push","Number","pop","oldValue","useEffect","sortServices","sortRes","footer","onClick","danger","textAlign","options","onChange","buttonStyle","target","dot","marginLeft","marginRight","showIcon","margin","checkable","showLine","onCheck","expandedKeys","checkedKeys","selectable","isEnable","categories","mode","width","forwardRef","inputSearchRef","useRef","filterModalRef","current","pageSize","pagination","setPagination","editFormVisible","setEditFormVisible","editFormData","setEditFormData","selectedItems","setSelectedItems","allSelectedFlag","setAllSelectedFlag","setConditionQuery","filterModalVisible","setFilterModalVisible","showSorterFlag","setShowSorterFlag","neededConditionQuery","replyServices","replyRes","replyErr","forceRequest","total","dataSource","showDataByDefaultWay","setValue","handleSearch","toggleEditorialPanel","record","saveData","params","callback","content","duration","saveErr","toggleSelectAll","uniqueSelectedItems","filter","dataItem","some","selectedItem","newSelectedItems","toggleSelectOne","every","listItem","toggleShowSorter","handleSort","currentTarget","orderBy","by","pageChange","handleItems","handlingItems","items","actionBarComponent","align","xs","sm","md","lg","xl","icon","PlusOutlined","FilterOutlined","StarOutlined","AlignCenterOutlined","HomeOutlined","shape","placeholder","enterButton","allowClear","justify","count","ReloadOutlined","DeleteOutlined","EyeOutlined","EyeInvisibleOutlined","VerticalAlignTopOutlined","VerticalAlignMiddleOutlined","color","cursor","CaretDownOutlined","CaretUpOutlined","contentListComponent","showQuickJumper","showSizeChanger","onShowSizeChange","pageSizeOptions","defaultPageSize","renderItem","background","i","actions","moment","Date","createDate","format","avatar","checked","marginTop","src","description","fontWeight","filterModalComponent","editFormComponent","ArticleApi","TagApi","SortApi","ReplyApi","MessageApi","CategoryApi","getList","post","LIST","getContent","CONTENT","save","SAVE","remove","DELETE","lock","LOCK","unlock","UNLOCK","top","TOP","unTop","UNTOP","approve","APPROVE","disapprove","DISAPPROVE"],"mappings":"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","file":"b-blog/js/chunks/319.js","sourcesContent":["import React, { memo, useCallback, useMemo, useState } from 'react'\nimport { Modal, Form, Input, Select, message } from 'antd'\nimport { useService } from '@common/hooks'\nimport { articleServices } from '@b-blog/services'\nimport type { IReply, IArticle } from '@b-blog/types'\nimport type { FC } from 'react'\nimport type { ModalProps } from 'antd/lib/modal'\nimport type { ToggleEditorialPanel, SaveData, ListItem } from '@b-blog/containers/reply'\n\ninterface EditFormProps extends ModalProps {\n  initialValues?: ListItem\n  onSave: SaveData\n  onToggleEditorialPanel: ToggleEditorialPanel\n}\n\ntype FormDataWhenEdited = IReply['formDataWhenEdited']\n\nconst EditForm: FC<EditFormProps> = memo((props) => {\n  const { initialValues, visible, onSave, onToggleEditorialPanel, ...restProps } = props\n  const [form] = Form.useForm<FormDataWhenEdited>()\n  const [articleSearch, setArticleSearch] = useState<string>(undefined)\n\n  const getListParams = useMemo<IArticle['getListParams']>(\n    () => ({\n      index: 1,\n      size: 10,\n      conditionQuery: { title: articleSearch?.trim() },\n    }),\n    [articleSearch],\n  )\n  const [articleLoading, articleRes, articleErr] = useService(articleServices.getList, getListParams, Boolean(initialValues?.id))\n  const articleList = useMemo(() => {\n    if (articleErr) {\n      message.error(articleErr.message || '获取列表失败')\n      return []\n    }\n    return articleRes?.data?.list || []\n  }, [articleRes, articleErr])\n\n  const handleCancel = useCallback<ModalProps['onCancel']>(() => {\n    form.resetFields()\n    onToggleEditorialPanel()\n  }, [form, onToggleEditorialPanel])\n\n  const handleOk = useCallback<ModalProps['onOk']>(() => {\n    form\n      .validateFields()\n      .then((values) => {\n        const { id } = initialValues || {}\n        const { to, isTop, reply, article } = values\n        const parentId = initialValues?.parentId === 0 ? id : initialValues?.parentId\n        const articleId = article.key\n        const selectedArticle = articleList.find((article) => article.id === articleId)\n        const toId = to?.key || selectedArticle?.user?.id\n        onSave({ toId, parentId, isTop, reply, articleId }, () => {\n          form.resetFields()\n          onToggleEditorialPanel()\n        })\n      })\n      .catch((error) => {\n        message.error(error.message || '请检查表单填写是否正确')\n      })\n  }, [form, initialValues, articleList, onSave, onToggleEditorialPanel])\n\n  const editingFormData = useMemo<FormDataWhenEdited>(() => {\n    const { isTop = 0, from, article: prevArticle } = initialValues || {}\n    const article = prevArticle && { key: prevArticle.id, label: prevArticle.title }\n    const toKey = from?.id || prevArticle?.user?.id\n    const toLabel = from?.nickName || prevArticle?.user?.nickName\n    const to = toKey && { key: toKey, label: toLabel }\n    return { isTop, to, article } as FormDataWhenEdited\n  }, [initialValues])\n\n  return (\n    <Modal\n      destroyOnClose\n      title={initialValues?.id ? '回复' : '添加'}\n      visible={visible}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      maskClosable={false}\n      {...restProps}\n    >\n      <Form labelCol={{ span: 5 }} wrapperCol={{ span: 17 }} form={form} initialValues={editingFormData}>\n        <Form.Item label=\"文章\" name=\"article\" rules={[{ required: true, message: '请选择文章!' }]}>\n          <Select\n            labelInValue\n            showSearch\n            disabled={Boolean(initialValues?.id)}\n            loading={articleLoading}\n            notFoundContent={null}\n            filterOption={false}\n            onSearch={setArticleSearch}\n          >\n            {articleList.map((article) => (\n              <Select.Option value={article.id} key={article.id}>\n                {article.title}\n              </Select.Option>\n            ))}\n          </Select>\n        </Form.Item>\n        {initialValues?.id && (\n          <>\n            <Form.Item label=\"回复对象\" name=\"to\">\n              <Select disabled labelInValue>\n                <Select.Option value={editingFormData?.to?.key}>{editingFormData?.to?.label}</Select.Option>\n              </Select>\n            </Form.Item>\n            <Form.Item label=\"原评论\">{initialValues.reply}</Form.Item>\n          </>\n        )}\n        <Form.Item label=\"评论\" name=\"reply\" rules={[{ required: true, message: '请输入评论内容!' }]}>\n          <Input.TextArea rows={2} />\n        </Form.Item>\n        <Form.Item label=\"置顶\" name=\"isTop\" rules={[{ required: true, message: '请选择是否置顶!' }]} style={{ marginBottom: 0 }}>\n          <Select>\n            <Select.Option value={1}>是</Select.Option>\n            <Select.Option value={0}>否</Select.Option>\n          </Select>\n        </Form.Item>\n      </Form>\n    </Modal>\n  )\n})\n\nexport default EditForm\n","import React, { memo, useCallback, useState, useEffect, useMemo, useImperativeHandle, forwardRef } from 'react'\nimport { Modal, Button, Checkbox, Divider, Select, Radio, Badge, Alert, Tree, message } from 'antd'\nimport { useService } from '@common/hooks'\nimport { sortServices, articleServices } from '@b-blog/services'\nimport type { SetStateAction, Dispatch, ForwardRefRenderFunction } from 'react'\nimport type { ModalProps } from 'antd/lib/modal'\nimport type { SelectValue } from 'antd/lib/select'\nimport type { ConditionQuery } from '@b-blog/containers/reply'\nimport type { ISort, IArticle } from '@b-blog/types'\n\ntype FilterRequest = (type: 'ok' | 'exit' | 'clear') => void\n\ninterface FilterModalProps extends ModalProps {\n  conditionQuery: ConditionQuery\n  onSetFilterModalVisible: Dispatch<SetStateAction<boolean>>\n  onSetConditionQuery: Dispatch<SetStateAction<ConditionQuery>>\n}\n\nexport type TemporaryCondition = {\n  commonFilterArr?: ['isTop'?, 'isApproved'?, 'isParent'?, 'isSon'?]\n  filteredSortArr?: string[]\n  articleArr?: { key: number; label: string }[]\n  filterFlag?: boolean\n}\n\nexport type FilterModalRef = { clear: () => void }\n\nconst FilterModal: ForwardRefRenderFunction<FilterModalRef, FilterModalProps> = (props, ref) => {\n  const { visible, conditionQuery, onSetFilterModalVisible, onSetConditionQuery } = props\n\n  const [filterType, setFilterType] = useState<'catalog' | 'article'>('catalog')\n  const [allSortList, setAllSortList] = useState<ISort['getListRes']['list']>([])\n  const [temporaryCondition, setTemporaryCondition] = useState<TemporaryCondition>({})\n  const [articleSearch, setArticleSearch] = useState<string>(undefined)\n\n  const getListParams = useMemo<IArticle['getListParams']>(\n    () => ({\n      index: 1,\n      size: 10,\n      conditionQuery: { title: articleSearch?.trim() },\n    }),\n    [articleSearch],\n  )\n  const [articleLoading, articleRes, articleErr] = useService(articleServices.getList, getListParams)\n  const articleList = useMemo(() => {\n    if (articleErr) {\n      message.error(articleErr.message || '获取列表失败')\n      return []\n    }\n    return articleRes?.data?.list || []\n  }, [articleRes, articleErr])\n\n  useImperativeHandle(\n    ref,\n    () => ({\n      clear: () => setTemporaryCondition({}),\n    }),\n    [],\n  )\n\n  const filterRequest = useCallback<FilterRequest>(\n    (type) => {\n      if (type === 'clear') {\n        setTemporaryCondition({})\n        return\n      }\n      onSetFilterModalVisible((prevValue) => !prevValue)\n      if (type === 'exit') {\n        setTemporaryCondition((prevValue) => ({\n          ...prevValue,\n          commonFilterArr: conditionQuery?.commonFilterArr || [],\n          filteredSortArr: conditionQuery?.filteredSortArr || [],\n          articleArr: conditionQuery?.articleArr || [],\n        }))\n        return\n      }\n      const { filteredSortArr = [], articleArr = [], commonFilterArr = [] } = temporaryCondition\n      const isApproved = commonFilterArr.includes?.('isApproved') ? 0 : undefined\n      const isTop = commonFilterArr.includes?.('isTop') ? 1 : undefined\n      const isRoot = (() => {\n        if (commonFilterArr.includes('isParent') && !commonFilterArr.includes('isSon')) return 1\n        if (!commonFilterArr.includes('isParent') && commonFilterArr.includes('isSon')) return 0\n        return undefined\n      })()\n      const articleIdsArr = articleArr.map((article) => article.key)\n      const category = { sortIdsArr: [], cateIdsArr: [] }\n      filteredSortArr.forEach((item) => {\n        const arr = item.split('-')\n        if (arr.length === 1) {\n          category.sortIdsArr.push(Number(arr[0]))\n        } else if (!category.sortIdsArr.includes(Number(arr[0]))) {\n          category.cateIdsArr.push(Number(arr.pop()))\n        }\n      })\n      onSetConditionQuery((oldValue) => ({\n        ...oldValue,\n        isApproved,\n        isTop,\n        isRoot,\n        commonFilterArr,\n        filteredSortArr,\n        articleArr,\n        articleIdsArr,\n        category,\n      }))\n    },\n    [conditionQuery, temporaryCondition, onSetFilterModalVisible, onSetConditionQuery],\n  )\n\n  useEffect(() => {\n    ;(async () => {\n      const [sortRes] = await sortServices.getList({ index: 1, size: 999 })\n      setAllSortList(sortRes?.data?.list || [])\n    })()\n  }, [])\n\n  return (\n    <Modal\n      destroyOnClose\n      visible={visible}\n      title=\"请选择筛选条件\"\n      onCancel={() => filterRequest('exit')}\n      footer={[\n        <Button key=\"exit\" onClick={() => filterRequest('exit')}>\n          不更改并退出\n        </Button>,\n        <Button key=\"clear\" danger onClick={() => filterRequest('clear')}>\n          清空\n        </Button>,\n        <Button key=\"ok\" type=\"primary\" onClick={() => filterRequest('ok')}>\n          确定\n        </Button>,\n      ]}\n    >\n      <div style={{ textAlign: 'center' }}>\n        <Checkbox.Group\n          options={[\n            { label: '置顶', value: 'isTop' },\n            { label: '待审', value: 'isApproved' },\n            { label: '父留言', value: 'isParent' },\n            { label: '子留言', value: 'isSon' },\n          ]}\n          value={temporaryCondition?.commonFilterArr || []}\n          onChange={(value) => {\n            setTemporaryCondition((prevValue) => ({ ...prevValue, commonFilterArr: value } as TemporaryCondition))\n          }}\n        />\n      </div>\n      <Divider />\n      <div style={{ textAlign: 'center' }}>\n        <Radio.Group size=\"small\" value={filterType} buttonStyle=\"solid\" onChange={({ target }) => setFilterType(target.value)}>\n          <Radio.Button value=\"catalog\">\n            <Badge dot={temporaryCondition?.filteredSortArr?.length > 0}>\n              <span style={{ marginLeft: 10, marginRight: 10 }}>按分类</span>\n            </Badge>\n          </Radio.Button>\n          <Radio.Button value=\"article\">\n            <Badge dot={temporaryCondition?.articleArr?.length > 0}>\n              <span style={{ marginLeft: 10, marginRight: 10 }}>按文章</span>\n            </Badge>\n          </Radio.Button>\n        </Radio.Group>\n      </div>\n      <Alert message=\"筛选分两种类别，请注意您是否需要同时进行两种类别的筛选！\" type=\"warning\" showIcon style={{ margin: '15px 0px' }} />\n      {filterType === 'catalog' && (\n        <Tree\n          checkable\n          showLine\n          onCheck={(value) => setTemporaryCondition((prevValue) => ({ ...prevValue, filteredSortArr: (value as unknown) as string[] }))}\n          expandedKeys={temporaryCondition?.filteredSortArr || []}\n          checkedKeys={temporaryCondition?.filteredSortArr || []}\n        >\n          {allSortList.map((item) => (\n            <Tree.TreeNode title={item.name} key={`${item.id}`} selectable={false} disabled={item.isEnable === 0}>\n              {item.categories.map((category) => (\n                <Tree.TreeNode\n                  title={category.name}\n                  key={`${item.id}-${category.id}`}\n                  selectable={false}\n                  disabled={item.isEnable === 1 ? category.isEnable === 0 : true}\n                />\n              ))}\n            </Tree.TreeNode>\n          ))}\n        </Tree>\n      )}\n      {filterType === 'article' && (\n        <div style={{ textAlign: 'center' }}>\n          <span>文章：</span>\n          <Select\n            labelInValue\n            showSearch\n            mode=\"multiple\"\n            notFoundContent={null}\n            loading={articleLoading}\n            filterOption={false}\n            onChange={(value) =>\n              setTemporaryCondition((prevValue) => ({ ...prevValue, articleArr: (value as unknown) as TemporaryCondition['articleArr'] }))\n            }\n            onSearch={setArticleSearch}\n            value={(temporaryCondition.articleArr as unknown) as SelectValue}\n            style={{ width: 350 }}\n          >\n            {articleList.map((article) => (\n              <Select.Option value={article.id} key={article.id}>\n                {article.title}\n              </Select.Option>\n            ))}\n          </Select>\n        </div>\n      )}\n    </Modal>\n  )\n}\n\nexport default memo(forwardRef(FilterModal))\n","import React, { memo, useMemo, useState, useCallback, useRef, useEffect } from 'react'\nimport { WrappedContainer } from '@spa/common/components'\nimport { useService } from '@common/hooks'\nimport { message, Row, Col, Button, List, Checkbox, Avatar, Tag, Input, Tooltip, Badge } from 'antd'\nimport {\n  EyeOutlined,\n  DeleteOutlined,\n  HomeOutlined,\n  ReloadOutlined,\n  PlusOutlined,\n  StarOutlined,\n  CaretDownOutlined,\n  CaretUpOutlined,\n  EyeInvisibleOutlined,\n  VerticalAlignTopOutlined,\n  VerticalAlignMiddleOutlined,\n  FilterOutlined,\n  AlignCenterOutlined,\n} from '@ant-design/icons'\nimport EditForm from '@b-blog/components/reply/edit-form'\nimport FilterModal, { FilterModalRef, TemporaryCondition } from '@b-blog/components/reply/filter-modal'\nimport moment from 'moment'\nimport { replyServices } from '@b-blog/services'\nimport type { FC, ReactNode } from 'react'\nimport type { RouteComponentProps } from 'react-router'\nimport type { IReply } from '@b-blog/types'\nimport type { ButtonProps } from 'antd/lib/button'\nimport type { PaginationProps } from 'antd/lib/pagination'\nimport type { SearchProps } from 'antd/lib/input/Search'\nimport type { TagProps } from 'antd/lib/tag'\n\nexport type ListItem = IReply['listItem']\nexport type ToggleEditorialPanel = (record?: ListItem) => void\nexport type SaveData = (params: IReply['editParams'], callback?: () => void) => void\nexport type HandleItems = (type: 'remove' | 'approve' | 'disapprove' | 'top' | 'unTop', record?: ListItem, callback?: () => void) => void\nexport type ConditionQuery = IReply['getListParams']['conditionQuery'] & TemporaryCondition\n\nconst MessageManagement: FC<RouteComponentProps> = memo(() => {\n  const inputSearchRef = useRef<Input>(null)\n  const filterModalRef = useRef<FilterModalRef>(null)\n  const [pagination, setPagination] = useState<{ current: number; pageSize: number }>({ current: 1, pageSize: 10 })\n  const [editFormVisible, setEditFormVisible] = useState<boolean>(false)\n  const [editFormData, setEditFormData] = useState<ListItem>(null)\n  const [selectedItems, setSelectedItems] = useState<ListItem[]>([])\n  const [allSelectedFlag, setAllSelectedFlag] = useState<boolean>(false)\n  const [conditionQuery, setConditionQuery] = useState<ConditionQuery>({})\n  const [filterModalVisible, setFilterModalVisible] = useState<boolean>(false)\n  const [showSorterFlag, setShowSorterFlag] = useState<boolean>(false)\n\n  const getListParams = useMemo<IReply['getListParams']>(() => {\n    const neededConditionQuery = { ...conditionQuery, commonFilterArr: undefined, articleArr: undefined, filteredSortArr: undefined }\n    return {\n      index: pagination.current,\n      size: pagination.pageSize,\n      conditionQuery: neededConditionQuery,\n    }\n  }, [pagination, conditionQuery])\n\n  const [loading, replyRes, replyErr, forceRequest] = useService(replyServices.getList, getListParams)\n\n  const [total, dataSource] = useMemo(() => {\n    if (replyErr) {\n      message.error(replyErr.message || '获取列表失败')\n      return [0, []]\n    }\n    return [replyRes?.data?.total || 0, replyRes?.data?.list || []]\n  }, [replyRes, replyErr])\n\n  const showDataByDefaultWay = useCallback<(event: React.MouseEvent<HTMLElement, MouseEvent>) => void>(() => {\n    setConditionQuery({})\n    filterModalRef.current?.clear()\n    inputSearchRef.current?.setValue?.('')\n    setPagination((prevValue) => ({ ...prevValue, current: 1 }))\n  }, [])\n\n  const handleSearch = useCallback<SearchProps['onSearch']>((value) => {\n    setPagination((prevValue) => ({ ...prevValue, current: 1 }))\n    setConditionQuery((prevValue) => ({ ...prevValue, reply: value.trim() }))\n  }, [])\n\n  const toggleEditorialPanel = useCallback<(record?: ListItem) => void>((record) => {\n    setEditFormData(record)\n    setEditFormVisible((prevValue) => !prevValue)\n  }, [])\n\n  const saveData = useCallback<SaveData>(\n    async (params, callback) => {\n      message.loading({ content: '正在提交...', key: 'saveData', duration: 0 })\n      const [, saveErr] = await replyServices.save(params)\n      if (saveErr) {\n        message.error({ content: saveErr.message || '提交失败', key: 'saveData' })\n        return\n      }\n      if (callback) callback()\n      message.success({ content: '操作成功', key: 'saveData' })\n      const { pageSize, current } = pagination\n      if (dataSource?.length === pageSize) {\n        setPagination((prevValue) => ({ ...prevValue, current: current + 1 }))\n      } else {\n        forceRequest()\n      }\n    },\n    [pagination, dataSource, forceRequest],\n  )\n\n  const toggleSelectAll = useCallback<ButtonProps['onClick']>(() => {\n    if (!dataSource?.length) return\n    const uniqueSelectedItems = dataSource.filter((dataItem) => !selectedItems.some((selectedItem) => selectedItem.id === dataItem.id))\n    const newSelectedItems = allSelectedFlag\n      ? selectedItems.filter((selectedItem) => !dataSource.some((dataItem) => dataItem.id === selectedItem.id))\n      : [...selectedItems, ...uniqueSelectedItems]\n    setSelectedItems(newSelectedItems)\n    setAllSelectedFlag(!allSelectedFlag)\n  }, [dataSource, selectedItems, allSelectedFlag])\n\n  const toggleSelectOne = useCallback<ToggleEditorialPanel>(\n    (record) => {\n      const newSelectedItems = selectedItems.some((selectedItem) => selectedItem.id === record.id)\n        ? selectedItems.filter((selectedItem) => selectedItem.id !== record.id)\n        : [...selectedItems, record]\n      setSelectedItems(newSelectedItems)\n      setAllSelectedFlag(\n        !dataSource?.length\n          ? false\n          : dataSource.every((listItem) => newSelectedItems.some((selectedItem) => selectedItem.id === listItem.id)),\n      )\n    },\n    [selectedItems, dataSource],\n  )\n\n  const toggleShowSorter = useCallback<() => void>(() => {\n    setShowSorterFlag((prevValue) => !prevValue)\n  }, [])\n\n  const handleSort = useCallback<TagProps['onClick']>(\n    ({ currentTarget }) => {\n      const { id } = currentTarget\n      if (id === 'default') {\n        setConditionQuery((prevValue) => ({ ...prevValue, orderBy: undefined }))\n        toggleShowSorter()\n        return\n      }\n      setConditionQuery((prevValue) => ({\n        ...prevValue,\n        orderBy: {\n          name: id,\n          by: prevValue?.orderBy?.by === 'ASC' ? 'DESC' : 'ASC',\n        } as ConditionQuery['orderBy'],\n      }))\n      setPagination((prevValue) => ({ ...prevValue, current: 1 }))\n    },\n    [toggleShowSorter],\n  )\n\n  const pageChange = useCallback<PaginationProps['onChange']>((current, pageSize) => {\n    setPagination({ current, pageSize })\n  }, [])\n\n  const handleItems = useCallback<HandleItems>(\n    async (type, record, callback) => {\n      const handlingItems = (record ? [record] : selectedItems).map((item) => ({ id: item.id, parentId: item.parentId }))\n      const [, err] = await replyServices[type]({ items: handlingItems })\n      if (err) {\n        message.error('操作失败')\n        return\n      }\n      if (callback) callback()\n      message.success('操作成功')\n      setSelectedItems([])\n      const { current } = pagination\n      if (type === 'remove' && handlingItems?.length > dataSource?.length) {\n        setPagination((prevValue) => ({ ...prevValue, current: current - 1 || 0 }))\n      } else {\n        forceRequest()\n      }\n    },\n    [selectedItems, pagination, dataSource, forceRequest],\n  )\n\n  useEffect(() => {\n    setAllSelectedFlag(\n      !dataSource?.length ? false : dataSource.every((listItem) => selectedItems.some((selectedItem) => selectedItem.id === listItem.id)),\n    )\n  }, [selectedItems, dataSource])\n\n  const actionBarComponent = useMemo<ReactNode>(() => {\n    return (\n      <>\n        <Row align=\"middle\" style={{ marginBottom: 15 }}>\n          <Col xs={12} sm={13} md={15} lg={16} xl={17}>\n            <Button\n              icon={<PlusOutlined />}\n              type=\"primary\"\n              size=\"small\"\n              onClick={() => {\n                toggleEditorialPanel()\n              }}\n            >\n              新增\n            </Button>\n            <Button\n              icon={<FilterOutlined />}\n              type=\"primary\"\n              danger={Boolean(\n                conditionQuery?.filteredSortArr?.length || conditionQuery?.articleArr?.length || conditionQuery?.commonFilterArr?.length,\n              )}\n              size=\"small\"\n              onClick={() => {\n                setFilterModalVisible(true)\n              }}\n              style={{ marginLeft: 10 }}\n            >\n              筛选\n            </Button>\n            <Button\n              icon={<StarOutlined />}\n              type=\"primary\"\n              danger={allSelectedFlag}\n              size=\"small\"\n              onClick={toggleSelectAll}\n              style={{ marginLeft: 10 }}\n            >\n              {allSelectedFlag ? '反选' : '全选'}\n              &nbsp;\n            </Button>\n            <Button\n              icon={<AlignCenterOutlined />}\n              type=\"primary\"\n              danger={showSorterFlag}\n              size=\"small\"\n              onClick={toggleShowSorter}\n              style={{ marginLeft: 10 }}\n            >\n              排序\n            </Button>\n          </Col>\n          <Col xs={2} sm={2} md={1} lg={1} xl={1}>\n            <Tooltip title=\"默认展示\">\n              <Button type=\"primary\" icon={<HomeOutlined />} shape=\"circle\" size=\"small\" onClick={showDataByDefaultWay} />\n            </Tooltip>\n          </Col>\n          <Col xs={10} sm={9} md={8} lg={7} xl={6}>\n            <Input.Search ref={inputSearchRef} placeholder=\"Enter something\" onSearch={handleSearch} enterButton allowClear />\n          </Col>\n        </Row>\n        {(selectedItems?.length > 0 || showSorterFlag) && (\n          <Row align=\"middle\" justify=\"space-between\" style={{ marginBottom: 15 }}>\n            <Col>\n              {selectedItems?.length > 0 && (\n                <>\n                  <Badge count={selectedItems.length} title=\"已选项数\">\n                    <Button\n                      icon={<ReloadOutlined />}\n                      type=\"primary\"\n                      size=\"small\"\n                      onClick={() => {\n                        setSelectedItems([])\n                      }}\n                    >\n                      清空\n                    </Button>\n                  </Badge>\n                  <Button\n                    icon={<DeleteOutlined />}\n                    type=\"primary\"\n                    danger\n                    size=\"small\"\n                    onClick={() => {\n                      handleItems('remove')\n                    }}\n                    style={{ marginLeft: 10 }}\n                  >\n                    删除\n                  </Button>\n                  <Button\n                    icon={<EyeOutlined />}\n                    type=\"primary\"\n                    size=\"small\"\n                    onClick={() => {\n                      handleItems('approve')\n                    }}\n                    style={{ marginLeft: 10 }}\n                  >\n                    展示\n                  </Button>\n                  <Button\n                    icon={<EyeInvisibleOutlined />}\n                    type=\"primary\"\n                    size=\"small\"\n                    onClick={() => {\n                      handleItems('disapprove')\n                    }}\n                    style={{ marginLeft: 10 }}\n                  >\n                    隐藏\n                  </Button>\n                  <Button\n                    icon={<VerticalAlignTopOutlined />}\n                    type=\"primary\"\n                    size=\"small\"\n                    onClick={() => {\n                      handleItems('top')\n                    }}\n                    style={{ marginLeft: 10 }}\n                  >\n                    置顶\n                  </Button>\n                  <Button\n                    icon={<VerticalAlignMiddleOutlined />}\n                    type=\"primary\"\n                    size=\"small\"\n                    onClick={() => {\n                      handleItems('unTop')\n                    }}\n                    style={{ marginLeft: 10 }}\n                  >\n                    取置\n                  </Button>\n                </>\n              )}\n            </Col>\n            <Col>\n              {showSorterFlag && (\n                <>\n                  <Tag color=\"magenta\" id=\"default\" style={{ marginLeft: 10, cursor: 'pointer' }} onClick={handleSort}>\n                    默认\n                  </Tag>\n                  <Tag color=\"magenta\" id=\"createDate\" style={{ cursor: 'pointer' }} onClick={handleSort}>\n                    时间\n                    {conditionQuery?.orderBy?.name === 'createDate' && conditionQuery?.orderBy?.by === 'DESC' ? (\n                      <CaretDownOutlined />\n                    ) : (\n                      <CaretUpOutlined />\n                    )}\n                  </Tag>\n                  <Tag color=\"magenta\" id=\"isApproved\" style={{ cursor: 'pointer' }} onClick={handleSort}>\n                    显示\n                    {conditionQuery?.orderBy?.name === 'isApproved' && conditionQuery?.orderBy?.by === 'DESC' ? (\n                      <CaretDownOutlined />\n                    ) : (\n                      <CaretUpOutlined />\n                    )}\n                  </Tag>\n                  <Tag color=\"magenta\" id=\"isTop\" style={{ cursor: 'pointer' }} onClick={handleSort}>\n                    置顶\n                    {conditionQuery?.orderBy?.name === 'isTop' && conditionQuery?.orderBy?.by === 'DESC' ? (\n                      <CaretDownOutlined />\n                    ) : (\n                      <CaretUpOutlined />\n                    )}\n                  </Tag>\n                </>\n              )}\n            </Col>\n          </Row>\n        )}\n      </>\n    )\n  }, [\n    showSorterFlag,\n    conditionQuery,\n    selectedItems,\n    allSelectedFlag,\n    toggleEditorialPanel,\n    toggleSelectAll,\n    handleItems,\n    showDataByDefaultWay,\n    handleSearch,\n    toggleShowSorter,\n    handleSort,\n  ])\n\n  const contentListComponent = useMemo<ReactNode>(() => {\n    return (\n      <List\n        loading={loading}\n        dataSource={dataSource}\n        pagination={{\n          showQuickJumper: true,\n          showSizeChanger: true,\n          onChange: pageChange,\n          onShowSizeChange: pageChange,\n          pageSizeOptions: ['10', '20', '30', '40'],\n          defaultPageSize: 10,\n          total,\n          ...pagination,\n        }}\n        renderItem={(item) => (\n          <List.Item\n            style={{ background: selectedItems.map((i) => i.id).includes(item.id) && '#FFFFE0' }}\n            key={item.id}\n            actions={[\n              <span key=\"createDate\">{moment(new Date(item.createDate)).format('YYYY-MM-DD')}</span>,\n              <Button\n                key=\"remove\"\n                size=\"small\"\n                type=\"primary\"\n                danger\n                onClick={() => {\n                  handleItems('remove', item)\n                }}\n              >\n                删除\n              </Button>,\n              <Button\n                key=\"reply\"\n                size=\"small\"\n                type=\"primary\"\n                onClick={() => {\n                  toggleEditorialPanel(item)\n                }}\n              >\n                回复\n              </Button>,\n              <Button\n                key=\"ifPass\"\n                size=\"small\"\n                type=\"primary\"\n                onClick={() => {\n                  handleItems(item.isApproved ? 'disapprove' : 'approve', item)\n                }}\n              >\n                {item.isApproved ? '隐藏' : '过审'}\n              </Button>,\n              <Button\n                key=\"isTop\"\n                size=\"small\"\n                type=\"primary\"\n                onClick={() => {\n                  handleItems(item.isTop ? 'unTop' : 'top', item)\n                }}\n              >\n                {item.isTop ? '取置' : '置顶'}\n              </Button>,\n            ]}\n          >\n            <List.Item.Meta\n              avatar={\n                <>\n                  <Checkbox\n                    checked={allSelectedFlag || selectedItems.map((selectedItem) => selectedItem.id).includes(item.id)}\n                    onChange={() => {\n                      toggleSelectOne(item)\n                    }}\n                    style={{ marginLeft: 10, marginRight: 10, marginTop: 10 }}\n                  />\n                  <Avatar src=\"https://gw.alipayobjects.com/zos/rmsportal/ThXAXghbEsBCCSDihZxY.png\" />\n                </>\n              }\n              title={\n                <span>\n                  《{item.article.title}》{item.parentId === 0 && <Tag color=\"cyan\">父</Tag>}\n                  {item.isTop === 1 && <Tag color=\"magenta\">已置顶</Tag>}\n                  {item.isApproved === 0 && <Tag color=\"orange\">待审核</Tag>}\n                </span>\n              }\n              description={\n                <span>\n                  <span style={{ color: 'green', fontWeight: 'bold' }}>\n                    <i>{item.from.nickName}&nbsp;</i>\n                  </span>\n                  回复&nbsp;\n                  <span style={{ color: '#A0522D', fontWeight: 'bold' }}>\n                    <i>{item.parentId === 0 ? '该文' : item.to.nickName}&nbsp;</i>:\n                  </span>\n                  &nbsp;<b style={{ color: 'black' }}>{`“${item.reply}”`}</b>\n                </span>\n              }\n            />\n          </List.Item>\n        )}\n      />\n    )\n  }, [\n    loading,\n    dataSource,\n    total,\n    pagination,\n    allSelectedFlag,\n    selectedItems,\n    pageChange,\n    toggleSelectOne,\n    handleItems,\n    toggleEditorialPanel,\n  ])\n\n  const filterModalComponent = useMemo(() => {\n    return (\n      <FilterModal\n        ref={filterModalRef}\n        visible={filterModalVisible}\n        conditionQuery={conditionQuery}\n        onSetFilterModalVisible={setFilterModalVisible}\n        onSetConditionQuery={setConditionQuery}\n      />\n    )\n  }, [filterModalVisible, conditionQuery])\n\n  const editFormComponent = useMemo<ReactNode>(() => {\n    return (\n      editFormVisible && (\n        <EditForm visible={editFormVisible} initialValues={editFormData} onToggleEditorialPanel={toggleEditorialPanel} onSave={saveData} />\n      )\n    )\n  }, [editFormVisible, editFormData, toggleEditorialPanel, saveData])\n\n  return (\n    <WrappedContainer>\n      {actionBarComponent}\n      {contentListComponent}\n      {editFormComponent}\n      {filterModalComponent}\n    </WrappedContainer>\n  )\n})\n\nexport default MessageManagement\n","import { post } from '@common/utils'\nimport type { ServiceResult } from '@common/types'\nimport type { IArticle } from '@b-blog/types'\n\nenum ArticleApi {\n  LIST = '/api/admin/article/list',\n  CONTENT = '/api/admin/article/content',\n  SAVE = '/api/admin/article/save',\n  DELETE = '/api/admin/article/delete',\n  LOCK = '/api/admin/article/lock',\n  UNLOCK = '/api/admin/article/unlock',\n  TOP = '/api/admin/article/top',\n  UNTOP = '/api/admin/article/unTop',\n}\n\nexport function getList(params: Partial<IArticle['getListParams']> = {}): ServiceResult<IArticle['getListRes']> {\n  return post<IArticle['getListRes'], typeof params>(ArticleApi.LIST, params)\n}\n\nexport function getContent(params: { articleId: number }): ServiceResult<string> {\n  return post<string, typeof params>(ArticleApi.CONTENT, params)\n}\n\nexport function save(params: IArticle['editParams']): ServiceResult {\n  return post<never, typeof params>(ArticleApi.SAVE, params)\n}\n\nexport function remove(params: IArticle['removeParams']): ServiceResult {\n  return post<never, typeof params>(ArticleApi.DELETE, params)\n}\n\nexport function lock(params: IArticle['lockParams']): ServiceResult {\n  return post<never, typeof params>(ArticleApi.LOCK, params)\n}\n\nexport function unlock(params: IArticle['unlockParams']): ServiceResult {\n  return post<never, typeof params>(ArticleApi.UNLOCK, params)\n}\n\nexport function top(params: IArticle['topParams']): ServiceResult {\n  return post<never, typeof params>(ArticleApi.TOP, params)\n}\n\nexport function unTop(params: IArticle['unTopParams']): ServiceResult {\n  return post<never, typeof params>(ArticleApi.UNTOP, params)\n}\n","import { post } from '@common/utils'\nimport type { ServiceResult } from '@common/types'\nimport type { ITag } from '@b-blog/types'\n\nenum TagApi {\n  LIST = '/api/admin/tag/list',\n  SAVE = '/api/admin/tag/save',\n  DELETE = '/api/admin/tag/delete',\n  LOCK = '/api/admin/tag/lock',\n  UNLOCK = '/api/admin/tag/unlock',\n}\n\nexport function getList(params: Partial<ITag['getListParams']> = {}): ServiceResult<ITag['getListRes']> {\n  return post<ITag['getListRes'], typeof params>(TagApi.LIST, params)\n}\n\nexport function save(params: ITag['editParams']): ServiceResult {\n  return post<never, typeof params>(TagApi.SAVE, params)\n}\n\nexport function remove(params: ITag['removeParams']): ServiceResult {\n  return post<never, typeof params>(TagApi.DELETE, params)\n}\n\nexport function lock(params: ITag['lockParams']): ServiceResult {\n  return post<never, typeof params>(TagApi.LOCK, params)\n}\n\nexport function unlock(params: ITag['unlockParams']): ServiceResult {\n  return post<never, typeof params>(TagApi.UNLOCK, params)\n}\n","import { post } from '@common/utils'\nimport type { ServiceResult } from '@common/types'\nimport type { ISort } from '@b-blog/types'\n\nenum SortApi {\n  LIST = '/api/admin/sort/list',\n  SAVE = '/api/admin/sort/save',\n  DELETE = '/api/admin/sort/delete',\n  LOCK = '/api/admin/sort/lock',\n  UNLOCK = '/api/admin/sort/unlock',\n}\n\nexport function getList(params: Partial<ISort['getListParams']> = {}): ServiceResult<ISort['getListRes']> {\n  return post<ISort['getListRes'], typeof params>(SortApi.LIST, params)\n}\n\nexport function save(params: ISort['editParams']): ServiceResult {\n  return post<never, typeof params>(SortApi.SAVE, params)\n}\n\nexport function remove(params: ISort['removeParams']): ServiceResult {\n  return post<never, typeof params>(SortApi.DELETE, params)\n}\n\nexport function lock(params: ISort['lockParams']): ServiceResult {\n  return post<never, typeof params>(SortApi.LOCK, params)\n}\n\nexport function unlock(params: ISort['unlockParams']): ServiceResult {\n  return post<never, typeof params>(SortApi.UNLOCK, params)\n}\n","import { post } from '@common/utils'\nimport type { ServiceResult } from '@common/types'\nimport type { IReply } from '@b-blog/types'\n\nenum ReplyApi {\n  LIST = '/api/admin/reply/list',\n  SAVE = '/api/admin/reply/save',\n  DELETE = '/api/admin/reply/delete',\n  TOP = '/api/admin/reply/top',\n  UNTOP = '/api/admin/reply/unTop',\n  APPROVE = '/api/admin/reply/approve',\n  DISAPPROVE = '/api/admin/reply/disapprove',\n}\n\nexport function getList(params: Partial<IReply['getListParams']> = {}): ServiceResult<IReply['getListRes']> {\n  return post<IReply['getListRes'], typeof params>(ReplyApi.LIST, params)\n}\n\nexport function save(params: IReply['editParams']): ServiceResult {\n  return post<never, typeof params>(ReplyApi.SAVE, params)\n}\n\nexport function remove(params: IReply['removeParams']): ServiceResult {\n  return post<never, typeof params>(ReplyApi.DELETE, params)\n}\n\nexport function top(params: IReply['topParams']): ServiceResult {\n  return post<never, typeof params>(ReplyApi.TOP, params)\n}\n\nexport function unTop(params: IReply['unTopParams']): ServiceResult {\n  return post<never, typeof params>(ReplyApi.UNTOP, params)\n}\n\nexport function approve(params: IReply['approveParams']): ServiceResult {\n  return post<never, typeof params>(ReplyApi.APPROVE, params)\n}\n\nexport function disapprove(params: IReply['disapproveParams']): ServiceResult {\n  return post<never, typeof params>(ReplyApi.DISAPPROVE, params)\n}\n","import { post } from '@common/utils'\nimport type { ServiceResult } from '@common/types'\nimport type { IMessage } from '@b-blog/types'\n\nenum MessageApi {\n  LIST = '/api/admin/message/list',\n  SAVE = '/api/admin/message/save',\n  DELETE = '/api/admin/message/delete',\n  TOP = '/api/admin/message/top',\n  UNTOP = '/api/admin/message/unTop',\n  APPROVE = '/api/admin/message/approve',\n  DISAPPROVE = '/api/admin/message/disapprove',\n}\n\nexport function getList(params: Partial<IMessage['getListParams']> = {}): ServiceResult<IMessage['getListRes']> {\n  return post<IMessage['getListRes'], typeof params>(MessageApi.LIST, params)\n}\n\nexport function save(params: IMessage['editParams']): ServiceResult {\n  return post<never, typeof params>(MessageApi.SAVE, params)\n}\n\nexport function remove(params: IMessage['removeParams']): ServiceResult {\n  return post<never, typeof params>(MessageApi.DELETE, params)\n}\n\nexport function top(params: IMessage['topParams']): ServiceResult {\n  return post<never, typeof params>(MessageApi.TOP, params)\n}\n\nexport function unTop(params: IMessage['unTopParams']): ServiceResult {\n  return post<never, typeof params>(MessageApi.UNTOP, params)\n}\n\nexport function approve(params: IMessage['approveParams']): ServiceResult {\n  return post<never, typeof params>(MessageApi.APPROVE, params)\n}\n\nexport function disapprove(params: IMessage['disapproveParams']): ServiceResult {\n  return post<never, typeof params>(MessageApi.DISAPPROVE, params)\n}\n","import { post } from '@common/utils'\nimport type { ServiceResult } from '@common/types'\nimport type { ICategory } from '@b-blog/types'\n\nenum CategoryApi {\n  LIST = '/api/admin/cate/list',\n  SAVE = '/api/admin/cate/save',\n  DELETE = '/api/admin/cate/delete',\n  LOCK = '/api/admin/cate/lock',\n  UNLOCK = '/api/admin/cate/unlock',\n}\n\nexport function getList(params: Partial<ICategory['getListParams']> = {}): ServiceResult<ICategory['getListRes']> {\n  return post<ICategory['getListRes'], typeof params>(CategoryApi.LIST, params)\n}\n\nexport function save(params: ICategory['editParams']): ServiceResult {\n  return post<never, typeof params>(CategoryApi.SAVE, params)\n}\n\nexport function remove(params: ICategory['removeParams']): ServiceResult {\n  return post<never, typeof params>(CategoryApi.DELETE, params)\n}\n\nexport function lock(params: ICategory['lockParams']): ServiceResult {\n  return post<never, typeof params>(CategoryApi.LOCK, params)\n}\n\nexport function unlock(params: ICategory['unlockParams']): ServiceResult {\n  return post<never, typeof params>(CategoryApi.UNLOCK, params)\n}\n"],"sourceRoot":""}