{"version":3,"sources":["webpack://yyy/./src/blog-admin/containers/test/index.tsx"],"names":["connect","state","user","dispatch","onClearUser","flag","type","UserActionType","props","useTranslation","i18n"],"mappings":"+JAwBA,WAAeA,cACb,SAACC,GAAD,MAAwB,CACtBC,KAAMD,EAAMC,SAEd,SAACC,GAAD,MAAqC,CACnCC,YAAa,SAACC,GAAD,OAAoBF,EAAS,CAAEG,KAAMC,iBALtD,EAbA,SAAaC,GAUX,OAR8BA,EAAtBN,KAAsBM,EAAhBJ,aAEGK,sBAATC,KAMD","file":"blog-admin/js/router/921.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React, { useEffect, Dispatch, useCallback } from 'react'\nimport { connect } from 'react-redux'\nimport { StoreState, UserAction, UserActionType } from '@common/store/types'\nimport { useTranslation } from 'react-i18next'\n\ninterface AppProps {\n  user: StoreState['user']\n  onClearUser: (flag?: boolean) => void\n}\n\nfunction App(props: AppProps): JSX.Element {\n  // const history = useHistory()\n  const { user, onClearUser } = props\n\n  const { i18n } = useTranslation()\n\n  // const logout = useCallback(() => {\n  //   onClearUser()\n  // }, [])\n\n  return <div>1111</div>\n}\n\nexport default connect<Pick<AppProps, 'user'>, Pick<AppProps, 'onClearUser'>, Omit<AppProps, 'user' | 'onClearUser'>, StoreState>(\n  (state: StoreState) => ({\n    user: state.user,\n  }),\n  (dispatch: Dispatch<UserAction>) => ({\n    onClearUser: (flag?: boolean) => dispatch({ type: UserActionType.LOGOUT }),\n  }),\n)(App)\n"],"sourceRoot":""}